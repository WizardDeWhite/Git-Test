1. register
================================================================================

  start_kernel()
      init_IRQ()
          native_init_IRQ()
              idt_setup_apic_and_irq_gates()
                  idt_setup_from_table(idt_table, apic_idts, ARRAY_SIZE(apic_idts), true);
                      INTG(LOCAL_TIMER_VECTOR,	apic_timer_interrupt),

2. setup_boot_APIC_clock()
================================================================================
2.1 calibrate_APIC_clock()
================================================================================
2.2 setup_APIC_timer()
================================================================================
2.2.1 evt = this_cpu_ptr(&lapic_events);
================================================================================
2.2.2 memcpy(levt, &lapic_clockevent, sizeof(*levt));
================================================================================
2.2.3 clockevents_register_device(evt)
================================================================================
2.2.3.1 tick_check_new_device(dev);
================================================================================
2.2.3.1.1 tick_setup_device(td, newdev, cpu, cpumask_of(cpu));
================================================================================
2.2.3.1.1.1 tick_setup_periodic(newdev, 0);
================================================================================
2.2.3.1.1.1.1 tick_set_periodic_handler(dev, broadcast);
================================================================================
2.2.3.1.1.1.1.1 dev->event_handler = tick_handle_periodic;
================================================================================

2. apic_timer_interrupt() -> smp_apic_timer_interrupt(regs)
================================================================================
2.1 local_apic_timer_interrupt()
================================================================================
2.1.1 evt = this_cpu_ptr(&lapic_events);
================================================================================
2.1.2 evt->event_handler(evt) -> tick_handle_periodic
================================================================================

3. tick_periodic(cpu)
================================================================================
3.1 do_timer(1)
================================================================================
3.1.1 jiffies_64 += 1;
================================================================================
3.1.2 calc_global_load(1), do every 5 seconds
================================================================================
3.1.2.1 avenrun[0] = calc_load(avenrun[0], EXP_1, active);
================================================================================
3.2 update_wall_time()
================================================================================
3.1 update_process_times(user_mode(get_irq_regs()))
================================================================================
3.1.1 account_process_tick(p, user_tick) 
================================================================================
3.1.2 run_local_timers()
================================================================================
3.1.2.1 raise_softirq(TIMER_SOFTIRQ), if required
================================================================================
3.1.3 rcu_sched_clock_irq(user_tick)
================================================================================
3.1.4 scheduler_tick()
================================================================================
3.2 profile_tick()
================================================================================
