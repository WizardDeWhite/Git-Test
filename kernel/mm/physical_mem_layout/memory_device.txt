1. memory_dev_init(), called kernel_init_freeable->do_basic_setup->driver_init()
================================================================================
see mm_init_on_x86.txt for exact position

1.1 block_sz = memory_block_size_bytes()
================================================================================
1.2 panic, if block_sz < MIN_MEMORY_BLOCK_SIZE
================================================================================
1.3 sections_per_block = block_sz / MIN_MEMORY_BLOCK_SIZE
================================================================================
1.4 subsys_system_register(&memory_subsys, memory_root_attr_groups), /sys/devices/system/memory/
================================================================================
1.5 add_memory_block(nr), nr equals the start section number of memory_block
================================================================================
1.5.1 init_memory_block(mem, base_memory_block_id(nr), MEM_ONLINE)
================================================================================
1.5.1.1 mem->start_section_nr = block_id * sections_per_block
================================================================================
1.5.1.2 mem->state = MEM_ONLINE
================================================================================
1.5.1.3 mem->nid = NUMA_NO_NODE
================================================================================
1.5.1.4 register_memory(mem), mem->dev.bus = &memory_subsys
================================================================================


0. data struct
================================================================================

0.1 memory_subsys
================================================================================
static struct bus_type memory_subsys = {
	.name = MEMORY_CLASS_NAME,
	.dev_name = MEMORY_CLASS_NAME,
	.online = memory_subsys_online,
	.offline = memory_subsys_offline,
};
