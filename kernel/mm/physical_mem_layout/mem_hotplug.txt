1. add_memory(), called by acpi_memory_enable_device()
================================================================================
1.1 register_memory_resource(), register into iomem_resource
================================================================================
1.2 add_memory_resource()
================================================================================
1.2.1 check_hotplug_memory_range(), must be memory_block aligned
================================================================================
1.2.2 mem_hotplug_begin()
================================================================================
1.2.3 memblock_add_node(start, size, nid), add range to memblock
================================================================================
1.2.4 __try_online_node(nid, start, false), whether this is a new node
================================================================================
1.2.5 arch_add_memory(), populate mem_section, e.g. memmap
================================================================================
1.2.5.1 init_memory_mapping(), create kernel page table
================================================================================
1.2.5.2 add_pages() -> __add_pages(), could be sub-section aligned
================================================================================
1.2.6 create_memory_block_devices(), create memory_block device
================================================================================
1.2.7 __register_one_node(), if it is new
================================================================================
1.2.8 link_mem_sections(), create memory_block devices' sysfs
================================================================================
1.2.8.1 register_mem_sect_under_node(), by walk_memory_blocks()
================================================================================
1.2.9 firmware_map_add_hotplug()
================================================================================
1.2.10 mem_hotplug_done()
================================================================================
1.2.11 online_memory_block(memory_block, ) -> device_online(memory_block->dev)
================================================================================
1.2.11.1 dev->bus->online(dev) -> memory_subsys_online(dev)
================================================================================


2. __add_pages(nid, pfn, nr_pages), supports subsection here
================================================================================
2.1 check_hotplug_memory_addressable()
================================================================================
2.2 check_pfn_span(pfn, nr_pages, "add"), range should be [SUB]SECTION aligned
================================================================================
2.3 sparse_add_section(nid, pfn, pfns, altmap)
================================================================================
2.3.1 sparse_index_init(section_nr,  nid)
================================================================================
2.3.2 memmap = section_activate(nid, pfn, nr_pages, altmap)
================================================================================
2.3.2.1 memmap = populate_section_memmap(pfn, nr_pages, nid, altmap)
================================================================================
2.3.2.2 section_deactivate()
================================================================================
2.3.3 page_init_poison()
================================================================================
2.3.4 set_section_nid(section_nr, nid)
================================================================================
2.3.5 section_mark_present(ms)
================================================================================
2.3.6 sparse_init_one_section(ms, section_nr, memmap, ms->usage, 0)
================================================================================
2.3.6.1 ms->section_mem_map |= sparse_encode_mem_map(memmap, pnum)
================================================================================



3. memory_subsys_online(dev), triggered on sysfs or by default
================================================================================
3.1 mem = to_memory_block(dev);
================================================================================
3.2 memory_block_change_state(mem, MEM_ONLINE, MEM_OFFLINE)
================================================================================
3.2.1 online_pages(start_pfn, nr_pages, MMOP_ONLINE, nid) 
================================================================================
3.2.2 offline_pages() 
================================================================================


4. online_pages(pfn, nr_pages, online_type) 
================================================================================
4.1 zone = zone_for_pfn_range(online_type, nid, pfn, nr_pages), determine zone
================================================================================
4.1.1 default_kernel_zone_for_pfn()
================================================================================
4.1.2 ZONE_MOVABLE
================================================================================
4.1.3 default_zone_for_pfn()
================================================================================
4.2 move_pfn_range_to_zone(zone, pfn, nr_pages, NULL)
================================================================================
4.2.1 init_currently_empty_zone()
================================================================================
4.2.2 resize_zone_range(zone, start_pfn, nr_pages)
================================================================================
4.2.3 resize_pgdat_range(pgdat, start_pfn, nr_pages)
================================================================================
4.2.4 memmap_init_zone()
================================================================================
4.2.4.1 __init_single_page()
================================================================================
4.2.4.2 set_pageblock_migratetype()
================================================================================
4.3 online_pages_range()
================================================================================
4.3.1 generic_online_page()
================================================================================
4.3.1.1 __free_pages_core(), put page to buddy system
================================================================================
4.3.2 online_mem_sections(), set SECTION_IS_ONLINE
================================================================================
4.4 shuffle_zone(zone)
================================================================================
4.5 build_all_zonelists(NULL)
================================================================================
4.6 init_per_zone_wmark_min()
================================================================================
4.7 kswapd_run(nid)
================================================================================
4.8 kcompactd_run(nid)
================================================================================
4.9 writeback_set_ratelimit()
================================================================================


5. __offline_pages() 
================================================================================

5.1 mem_hotplug_begin() 
================================================================================

5.2 test_pages_in_a_zone(), make sure range in one zone 
================================================================================

5.3 start_isolate_page_range() 
================================================================================

5.3.1 set_migratetype_isolate(), set the whole range to MIGRATE_ISOLATE
================================================================================

5.3.1.1 has_unmovable_pages(), check page movability
================================================================================

5.3.1.2 get_pageblock_migratetype() 
================================================================================

5.3.1.3 set_pageblock_migratetype(), set pageblock type
================================================================================

5.3.1.4 move_freepages_block(), move_freepages()
================================================================================
; move page in Buddy to free_area[].free_list[MIGRATE_ISOLATE]

5.3.1.5 drain_all_pages(), handle pcp pages via drain_local_pages_wq
================================================================================

5.4 node_states_check_changes_offline(), affect node_states[]
================================================================================

5.5 repeat:
================================================================================

5.6 lru_add_drain_all(), check pages in those pagevec
================================================================================
; lru_add_pvec               (struct pagevec)
; lru_rotate_pvecs
; lru_deactivate_file_pvecs
; lru_lazyfree_pvecs
; activate_page_pvecs

5.6.1 pagevec_count() 
================================================================================

5.6.2 lru_add_drain_per_cpu() 
================================================================================

5.6.2.1 lru_add_drain() -> lru_add_drain_cpu(get_cpu())
================================================================================

5.7 drain_all_pages() 
================================================================================

5.7.1 drain_local_pages_wq() -> drain_local_pages()
================================================================================

5.7.1.1 drain_pages_zone() 
================================================================================

5.7.1.2 drain_pages() 
================================================================================

5.8 pfn = scan_movable_pages() 
================================================================================

5.9 do_migrate_range(pfn, end_pfn) 
================================================================================

5.9.1 isolate_lru_page(), remove from its lru list
================================================================================

5.9.2 isolate_movable_page(), set Isolated
================================================================================

5.9.3 migrate_pages()
================================================================================

5.9.4 putback_movable_pages()
================================================================================

5.10 dissolve_free_huge_pages() 
================================================================================

5.11 check_pages_isolated() 
================================================================================

5.12 offline_isolated_pages() 
================================================================================

5.13 undo_isolate_page_range() 
================================================================================

5.13.1 unset_migratetype_isolate() 
================================================================================

5.14 adjust_managed_page_count() 
================================================================================

5.15 init_per_zone_wmark_min() 
================================================================================

5.16 zone_pcp_reset() 
================================================================================

5.17 build_all_zonelists() 
================================================================================

5.18 node_states_clear_node() 
================================================================================

5.19 mem_hotplug_done() 
================================================================================

0. data struct
================================================================================

   mem_section -> sparse.txt
