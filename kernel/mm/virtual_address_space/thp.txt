1. hugepage_init(), called by do_one_initcall
================================================================================
1.1 hugepage_init_sysfs(&hugepage_kobj), /sys/kernel/mm/transparent_hugepage/
================================================================================
1.1.1 kobject_create_and_add("transparent_hugepage")
================================================================================
1.1.2 sysfs_create_group(&hugepage_attr_group)
================================================================================
1.1.2.1 enabled
================================================================================
1.1.2.2 defrag
================================================================================
1.1.2.3 use_zero_page
================================================================================
1.1.2.4 hpage_pmd_size
================================================================================
1.1.3 sysfs_create_group(&khugepaged_attr_group)
================================================================================
1.1.3.1 khugepaged_defrag
================================================================================
1.1.3.2 khugepaged_max_ptes
================================================================================
1.1.3.3 pages_to_scan
================================================================================
1.1.3.4 pages_collapsed
================================================================================
1.1.3.5 full_scans
================================================================================
1.2 khugepaged_init()
================================================================================
1.2.1 kmem_cache_create("khugepaged_mm_slot")
================================================================================
1.3 register_shrinker(&huge_zero_page_shrinker)
================================================================================
1.3.1 prealloc_shrinker()
================================================================================
1.3.2 register_shrinker_prepared()
================================================================================
1.3.3 shrink_huge_zero_page_count
================================================================================
1.3.4 shrink_huge_zero_page_scan
================================================================================
1.4 register_shrinker(&deferred_split_shrinker)
================================================================================
1.4.1 deferred_split_count
================================================================================
1.4.2 deferred_split_scan
================================================================================
1.5 start_stop_khugepaged()
================================================================================
1.5.1 kthread_run(khugepaged), start kthread: khugepaged
================================================================================

2. khugepaged
================================================================================
2.1 khugepaged_do_scan()
================================================================================
2.1.1 khugepaged_prealloc_page()
================================================================================
2.1.2 khugepaged_scan_mm_slot() <--- core work
================================================================================

2.2 khugepaged_wait_work()
================================================================================
2.2.1 khugepaged_has_work()
================================================================================
2.2.2 khugepaged_wait_event(), wait khugepaged_scan has slot or should stop
================================================================================
2.3 collect_mm_slot(khugepaged_scan.mm_slot)
================================================================================

3. khugepaged_scan_mm_slot() <--- core work here
================================================================================
3.1 khugepaged_collapse_pte_mapped_thps(mm_slot)
================================================================================
3.2 iterate on each vma in one mm_slot->mm
================================================================================
3.3 iterate on each HPAGE_PMD_SIZE in the vma
================================================================================
3.4 khugepaged_scan_pmd(mm, vma, address, hpage), scan one particular HPAGE
================================================================================
3.4.1 pmd = mm_find_pmd(mm, address)
================================================================================

4. split_huge_page(page) -> split_huge_page_to_list()
================================================================================
4.1 can_split_huge_page(head)
================================================================================
4.1.1 return total_mapcount(page) == page_count(page) - extra_pins - 1; the extra "-1" is for get_page() before calling split_huge_page()
================================================================================
4.2 unmap_page(head)
================================================================================
4.2.1 try_to_unmap(page, ttu_flags)
================================================================================
4.3 __split_huge_page(page, list, end, flags)
================================================================================
4.4 remap_page(head)
================================================================================

5. split_huge_pmd_address(vma, address, flags)
================================================================================
5.1 __split_huge_pmd(vma, pmd, address, freeze, page) -> __split_huge_pmd_locked
================================================================================
5.1.1 page_ref_add(page, HPAGE_PMD_NR - 1)  <- when release ?
================================================================================
5.1.2 set_pte_at(mm, addr, pte, entry), total HPAGE_PMD_NR entries
================================================================================

0. data structure
================================================================================
commit 71e3aac0724ffe8918992d76acfe3aad7d8724a5
thp: transparent hugepage core

0.1 mm_slot, detail work item added to khugepaged_scan
================================================================================
; from mm to mm_slot

    mm_slot
    +------------------------------+
    |hash                          |
    |    (struct hlist_node)       |
    |mm_node                       |
    |    (struct list_head)        |
    |mm                            |
    |    (struct mm_struct*)       |
    |                              |
    |nr_pte_mapped_thp             |
    |    (int)                     |
    |pte_mapped_thp[8]             |
    |    (unsigned long)           |
    |                              |
    +------------------------------+

0.2 khugepaged_scan, a scan list for work
================================================================================
; when the list is not empty, it means HAS work

    khugepaged_scan
    +------------------------------+
    |mm_slot                       |
    |    (struct mm_slot *)        |
    |address                       |
    |    (unsigned long)           |    mm_slot           mm_slot           mm_slot
    |                              |    +------------+    +------------+    +------------+
    |mm_head                       |--->|            |--->|            |--->|            |
    |    (struct list_head)        |    |            |    |            |    |            |
    +------------------------------+    +------------+    +------------+    +------------+

0.3 split_huge_pmd_address()
================================================================================

Before:

       
       +-----------------+
       |                 |
       |                 |
       |                 |
       +-----------------+                 2M THP page
       |pmd              | --------------->+---------------------+
       +-----------------+                 |                     |
       |                 |                 |                     |
       |                 |                 |                     |
       |                 |                 |                     |
       +-----------------+                 |                     |
                                           |                     |
                                           |                     |
                                           |                     |
                                           |                     |
                                           +---------------------+

After: 

       +-----------------+
       |                 |
       |                 |
       |                 |
       +-----------------+                 PTE page                                2M THP page
       |pmd              | --------------->+---------------------+                 +---------------------+
       +-----------------+                 |                     | --------------->|4K                   |
       |                 |                 +---------------------+                 +---------------------+
       |                 |                 |                     |---------------->|4K                   |
       |                 |                 +---------------------+                 +---------------------+
       +-----------------+                 |                     |                 |                     |
                                           |                     |                 |                     |
                                           |                     |                 |                     |
                                           |                     |                 |                     |
                                           |                     |                 |                     |
                                           +---------------------+                 +---------------------+

0.4 page_count/mapcount change
================================================================================
PMD-mapped THP with freeze

                                 page_count    mapcount  compound_mapcount total_mapcount

split_huge_page_to_list          1+1           0         1                 1

    unmap_page                   1             0         0                 0
    page_ref_freeze()            0             0         0                 0
    __split_huge_page
        __split_huge_page_tail   1             0         NA                NA    for tail
	ClearPageCompound
	page_ref_inc(head)       1             0         NA                NA    for head
	remap_page()             2             1         NA                NA
	put_page(subpage)        2             1         NA                NA    for page
                                 1             1         NA                NA    for subpage
