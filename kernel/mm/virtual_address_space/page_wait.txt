1. put_and_wait_on_page_locked(page)
================================================================================
1.1 page = compound_head(page)
================================================================================
1.2 q = page_waitqueue(page)
================================================================================
1.2.1 &page_wait_table[hash_ptr(page, PAGE_WAIT_TABLE_BITS)]
================================================================================
1.3 wait_on_page_bit_common(q, page, PG_locked, TASK_UNINTERRUPTIBLE, DROP)
================================================================================
1.3.1 init_wait(wait)
================================================================================
1.3.2 wait->func = wake_page_function;
================================================================================
1.3.3 __add_wait_queue_entry_tail(q, wait);
================================================================================

2. unlock_page()
================================================================================
2.1 page = compound_head(page)
================================================================================
2.2 clear_bit_unlock_is_negative_byte(PG_locked, &page->flags)
================================================================================
2.3 wake_up_page_bit(page, PG_locked)
================================================================================
2.3.1 q = page_waitqueue(page)
================================================================================
2.3.2 __wake_up_locked_key_bookmark(q, TASK_NORMAL, &key, &bookmark)
================================================================================
2.3.2.1 wait_queue_entry_t->func(, TASK_NORMAL, wake_flags, key) = wake_page_function
================================================================================

0. data struct
================================================================================

0.1 global variable
================================================================================

#define PAGE_WAIT_TABLE_BITS 8
#define PAGE_WAIT_TABLE_SIZE (1 << PAGE_WAIT_TABLE_BITS)
static wait_queue_head_t page_wait_table[PAGE_WAIT_TABLE_SIZE]

0.2 wait_queue_head_t
================================================================================

    wait_queue_head_t  
    +-----------------------------+
    |lock                         |
    |    (spinlock_t)             |      wait_queue_entry_t
    |head                         | ---->+-----------------+
    |    (struct list_head)       |      |                 |
    |                             |      |                 |
    +-----------------------------+      +-----------------+

0.3 wait_page_queue
================================================================================

    wait_page_queue  
    +-----------------------------+
    |page                         |
    |    (struct page*)           |
    |bit_nr                       |
    |    (int)                    |
    |wait                         |
    |    (wait_queue_entry_t)     |
    |    +------------------------+
    |    |flags                   |  = 0
    |    |    (unsigned long)     |
    |    |private                 |  = current
    |    |    (void*)             |
    |    |func                    |  = wake_page_function
    |    |    (wait_queue_func_t) |
    |    |entry                   |
    |    |    (list_head)         |
    +----+------------------------+
