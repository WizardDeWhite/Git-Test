1. mt_init()
================================================================================

2. mtree_store()/mtree_store_range()
================================================================================

3. mtree_load()
================================================================================

0. data struct
================================================================================
Testing:
userspace:    tools/testing/radix-tree/maple.c
kernel space: lib/test_maple_tree.c

History:

commit 54a611b605901c7d5d05b6b8f5d04a6ceb0962aa
Author: Liam R. Howlett <Liam.Howlett@Oracle.com>
Date:   Tue Sep 6 19:48:39 2022 +0000

    Maple Tree: add new data structure
    
    Patch series "Introducing the Maple Tree"

Document: Documentation/core-api/maple_tree.rst

0.0 B-Tree
================================================================================

0.0.1 property
================================================================================
1. 平衡: 所有叶子节点都在同一层
2. 有序: 节点内元素和各子树间有序
3. 多路: m阶，最多:有m个分支，m-1个元素；
              最少: 根节点有1个元素，其他节点(m/2 - 1) 个元素. m/2上取整

0.0.2 insertion
================================================================================
1. 插入都在叶子节点
2. 如果元素个数没有超过最大个数m-1，则完成
3. 如果元素个数超过了m-1，则将第m/2个元素上移到父节点。原节点两边作为上移节点的子树
4. 再回到第二步，查看父节点是否上溢出

0.0.3 deletion
================================================================================
1. 如果是叶子节点则直接删除。如果不是叶子节点则找到后继/前驱，替换后删除。
2. 删除后如果没有下溢出（小于 (m/2- 1) 个元素），结束
3. 如果发生下溢出：
   如果兄弟够借，父下兄上。同时带上原来的子树一起移动。
   如果兄弟不够，挑一个兄弟合并。把父节点下移，再把兄弟合并过来。此时需要再判断父节点是否有下溢出

0.1 maple_tree
================================================================================

    maple_tree
    +--------------------------------------------+
    |ma_lock                                     |
    |    (struct spinlock_t)                     |
    |ma_flags                                    |
    |    (unsigned int)                          |
    |                                            |
    |ma_root                                     |
    |    (void *)                                |
    +--------------------------------------------+

0.1.1 enum maple_type
================================================================================
	maple_dense,
	maple_leaf_64,
	maple_range_64,
	maple_arange_64,

0.2 maple_node
================================================================================

    maple_node (1 + 31) * 8 = 256 byte
    +--------------------------------------------+
    |parent                                      |
    |    (struct maple_pnode*)                   |
    |slot[MAPLE_NODE_SLOTS]                      | 31
    |    (void *)                                |
    +============================================+
    |mr64                                        |
    |    (struct maple_range_64)                 |
    +============================================+
    |ma64                                        |
    |    (struct maple_arange_64)                |
    +============================================+
    |alloc                                       |
    |    (struct maple_alloc)                    |
    +============================================+
    |pad                                         |
    |    (void *)                                |
    |rcu                                         |
    |    (struct rcu_head)                       |
    |piv_parent                                  |
    |    (struct maple_enode*)                   |
    |parent_slot                                 |
    |    (unsigned char)                         |
    |type                                        |
    |    (enum maple_type)                       |
    |slot_len                                    |
    |    (unsigned char)                         |
    |ma_flags                                    |
    |    (unsigned int)                          |
    +--------------------------------------------+

0.2.1 maple_pnode, a pseudo struct only used as pointer
================================================================================

0.2.2 maple_enode, a pseudo struct only used as ponter
================================================================================

0.2.3 maple_range_64
================================================================================

    maple_range_64 (1 + 15 + 16) * 8 = 256 byte
    +--------------------------------------------+
    |parent                                      |
    |    (struct maple_pnode*)                   |
    |pivot[MAPLE_RANGE64_SLOTS - 1]              | 15
    |slot[MAPLE_RANGE64_SLOTS]                   | 16
    |    (void *)                                |
    |                                            |
    |                                            |
    +--------------------------------------------+

0.2.4 maple_arange_64
================================================================================

    maple_arange_64 (1 + 9 + 10 + 10 + 1) * 8 = 248 byte
    +--------------------------------------------+
    |parent                                      |
    |    (struct maple_pnode*)                   |
    |pivot[MAPLE_ARANGE64_SLOTS - 1]             | 9
    |    (unsigned long)                         |
    |slot[MAPLE_ARANGE64_SLOTS]                  | 10
    |    (void *)                                |
    |gap[MAPLE_ARANGE64_SLOTS]                   | 10
    |    (unsigned long)                         |
    |meta                                        |
    |    (struct maple_metadata)                 |
    |    +---------------------------------------+
    |    |end                                    |
    |    |gap                                    |
    |    |    (unsigned char)                    |
    +----+---------------------------------------+

0.2.5 maple_alloc
================================================================================

    maple_alloc (1 + 1 + 30) * 8 = 256 byte
    +--------------------------------------------+
    |total                                       |
    |    (unsigned long)                         |
    |node_count                                  |
    |    (unsigned char)                         |
    |request_count                               |
    |    (unsigned int)                          |
    |slot[MAPLE_ALLOC_SLOTS]                     | 30
    |    (struct maple_alloc*)                   |
    +--------------------------------------------+

0.3 ma_state
================================================================================

    ma_state
    +--------------------------------------------+
    |tree                                        |
    |    (struct maple_tree*)                    |
    |index                                       |
    |last                                        |
    |    (unsigned long)                         |
    |node                                        |
    |    (struct maple_enode*)                   |
    |min                                         |
    |max                                         |
    |    (unsigned long)                         |
    |alloc                                       |
    |    (struct maple_alloc*)                   |
    |status                                      |
    |    (enum maple_status)                     |
    |depth                                       |
    |offset                                      |
    |mas_flags                                   |
    |end                                         |
    |    (unsigned char)                         |
    |                                            |
    +--------------------------------------------+
