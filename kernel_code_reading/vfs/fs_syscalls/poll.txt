1. SYSCALL_DEFINE3(poll, struct pollfd __user *, ufds, unsigned int, nfds, int, timeout_msecs)
================================================================================
1.1 poll_select_set_timeout
================================================================================
1.2 do_sys_poll(ufds, nfds, to)
================================================================================
1.2.1 prepare poll_list
================================================================================
1.2.2 poll_initwait(&table)
================================================================================
1.2.2.1 init_poll_funcptr(&pwq->pt, __pollwait)
================================================================================
1.2.3 do_poll(head, &table, end_time)
================================================================================
1.2.3.1 do_pollfd() -> vfs_poll()
================================================================================
1.2.3.2 poll_schedule_timeout(), wait to be waken by pollwake
================================================================================
1.2.4 poll_freewait(&table) 
================================================================================
1.2.5 __put_user(fds[].revents, ufds->revents), copy revents back to user
================================================================================

2. do_pollfd(pollfd, poll_table, can_busy_loop, busy_flag), one individual pollfd
================================================================================
2.1 filter = demangle_poll(pollfd->events)
================================================================================
2.2 poll_table->_key = filter | busy_flag
================================================================================
2.3 mask = vfs_poll(file, poll_table) -> f_op->poll(file, poll_table)
================================================================================
2.3.1 poll_wait(file, wait_queue_head_t, poll_table)
================================================================================
2.3.1.1 __pollwait(file, wait_queue_head_t, poll_table)
================================================================================
2.3.1.1.1 entry = poll_get_entry(poll_wqueues)
================================================================================
2.3.1.1.2 entry->filp = file
================================================================================
2.3.1.1.3 entry->key = poll_table->_key
================================================================================
2.3.1.1.4 init_waitqueue_func_entry(&entry->wait, pollwake);
================================================================================
2.3.1.1.5 entry->wait.private = pwq;
================================================================================
2.3.1.1.6 add_wait_queue(wait_address, &entry->wait), add entry to wait queue
================================================================================
2.4 pollfd->revents = mangle_poll(mask)
================================================================================

3. pollwake(wait_queue_entry_t, mode, sync, key), wake up poll thread by other
================================================================================
3.1 entry = container_of(wait, poll_table_entry, wait)
================================================================================
3.2 __pollwake(wait, mode, sync, key)
================================================================================
3.2.1 DECLARE_WAITQUEUE(dummy_wait, pwq->polling_task);
================================================================================
3.2.2 default_wake_function(&dummy_wait, mode, sync, key);
================================================================================

0. Data Structure
================================================================================
0.1 poll_list
================================================================================
A copy of userspace parameter

    poll_list
    +----------------------------------+
    |next                              |
    |    (struct poll_list*)           |
    |len                               |
    |    (int)                         |
    |entries[0]                        |  copied from poll syscall parameter
    |    (struct pollfd)               |
    |    +-----------------------------+
    |    |fd                           |
    |    |events                       |
    |    |revents                      |
    +----+-----------------------------+


0.2 poll_wqueues
================================================================================

    poll_wqueues
    +----------------------------------+
    |pt                                |
    |    (poll_table)                  |
    |    +-----------------------------+
    |    |_qproc                       |  = __pollwait
    |    |   (poll_queue_proc)         |
    |    |_key                         |
    |    |   (__poll_t)                |
    |    +-----------------------------+
    |polling_task                      |  = polling process, be waken by pollwake
    |    (struct task_struct*)         |
    |triggered/error/inline_index      |
    |    (int)                         |
    |inline_entries[]                  |
    |    (struct poll_table_entry)     |
    |    +-----------------------------+
    |    |filep                        |
    |    |  (struct file*)             |
    |    |key                          |
    |    |  (__poll_t)                 |
    |    |wait                         |
    |    |  (wait_queue_entry_t)       |
    |    |  +--------------------------+
    |    |  |func                      |   pollwake
    |    |  |private                   |   this poll_wqueues
    |    |  +--------------------------+
    |    |wait_address                 |   to which queue we register
    |    |  (wait_queue_head_t *)      |
    |    +-----------------------------+
    |                                  |
    |table                             |
    |    (struct poll_table_page)      |
    |    +-----------------------------+
    |    |next                         |
    |    |   (struct poll_table_page)  |
    |    |entry                        |
    |    |   (struct poll_table_entry*)|
    |    |entries[0]                   |
    |    |   (struct poll_table_entry) |
    +----+-----------------------------+

