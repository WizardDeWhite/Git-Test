1. kvm_init(), initialization
================================================================================

1.1 kvm_arch_init()
================================================================================

1.1.1 kvm_mmu_module_init(), reset mask, create cache, shrinker
================================================================================
int kvm_mmu_module_init(void)
{
	int ret = -ENOMEM;

	kvm_mmu_reset_all_pte_masks();

	pte_list_desc_cache = kmem_cache_create("pte_list_desc",
					    sizeof(struct pte_list_desc),
					    0, SLAB_ACCOUNT, NULL);
	if (!pte_list_desc_cache)
		goto out;

	mmu_page_header_cache = kmem_cache_create("kvm_mmu_page_header",
						  sizeof(struct kvm_mmu_page),
						  0, SLAB_ACCOUNT, NULL);
	if (!mmu_page_header_cache)
		goto out;

	if (percpu_counter_init(&kvm_total_used_mmu_pages, 0, GFP_KERNEL))
		goto out;

	ret = register_shrinker(&mmu_shrinker);
	if (ret)
		goto out;

	return 0;

out:
	mmu_destroy_caches();
	return ret;
}

1.2 kvm_arch_hardware_setup(), setup ept, etc
================================================================================

2. kvm_arch_vcpu_create(), create
================================================================================

2.1 kvm_arch_vcpu_create()->vmx_create_vcpu()
================================================================================

2.1.1 kvm_vcpu_init()
================================================================================

2.1.1.1 kvm_arch_vcpu_init()
================================================================================

2.1.1.1.1 kvm_mmu_create()
================================================================================

3. kvm_arch_vcpu_setup(), setup
================================================================================

3.1 vcpu_load()
================================================================================

3.1.1 kvm_arch_vcpu_load()
================================================================================

3.1.1.1 vmx_vcpu_load(), load vmcs
================================================================================

3.2 kvm_vcpu_reset()
================================================================================

3.2.1 kvm_x86_ops->vcpu_reset(), vmx_vcpu_reset()
================================================================================

3.2.1.1 vmx_set_cr0()
================================================================================

3.2.1.1.1 ept_update_paging_mode_cr0() , enable/disable PG
================================================================================

3.3 kvm_mmu_setup()
================================================================================

3.1.1 kvm_init_mmu(), reset_roots
================================================================================

3.3.1.1 init_kvm_tdp_mmu(), setup kvm_mmu structure
================================================================================

4. vcpu_run(), a big loop
================================================================================

4.1 vcpu_enter_guest()
================================================================================

4.1.1 kvm_mmu_reload()
================================================================================

4.1.1.1 kvm_mmu_load()
================================================================================
int kvm_mmu_load(struct kvm_vcpu *vcpu)
{
	int r;

	r = mmu_topup_memory_caches(vcpu);
	if (r)
		goto out;
	r = mmu_alloc_roots(vcpu);
	kvm_mmu_sync_roots(vcpu);
	if (r)
		goto out;
	kvm_mmu_load_cr3(vcpu);
	kvm_x86_ops->tlb_flush(vcpu, true);
out:
	return r;
}

4.1.1.1.1 mmu_topup_memory_caches(), reserve from cache
================================================================================

4.1.1.1.2 mmu_alloc_roots(), allocate spt
================================================================================
mmu_alloc_direct_roots

4.1.1.1.3 kvm_mmu_sync_roots()
================================================================================

4.1.1.1.4 kvm_mmu_load_cr3(), vmx_set_cr3
================================================================================
; setup eptp and guest_cr3 in vmcs
static inline void kvm_mmu_load_cr3(struct kvm_vcpu *vcpu)
{
	if (VALID_PAGE(vcpu->arch.mmu.root_hpa))
		vcpu->arch.mmu.set_cr3(vcpu, vcpu->arch.mmu.root_hpa |
					     kvm_get_active_pcid(vcpu));
}

4.1.1.1.5 tlb_flush()
================================================================================

4.1.2 kvm_x86_ops->run(), vmx_vcpu_run()
================================================================================

4.1.3 kvm_x86_ops->handle_exit(), vmx_handle_exit()
================================================================================

4.1.3.1 handle_ept_violation()
================================================================================

4.1.3.1.1 kvm_mmu_page_fault()
================================================================================

4.1.3.1.1.1 vcpu->arch.mmu.page_fault(), tdp_page_fault()
================================================================================

4.1.3.1.1.1.1 try_async_pf(), calculate pfn from gfn
================================================================================

4.1.3.1.1.1.2 __direct_map(), setup shadow page
================================================================================

5. tdp_page_fault()
================================================================================

5.1 mmu_topup_memory_caches()
================================================================================

5.2 mapping_level()
================================================================================

5.3 fast_page_fault()
================================================================================

5.4 try_async_pf()
================================================================================

5.5 handle_abnormal_pfn()
================================================================================

5.6 make_mmu_pages_available()
================================================================================

5.6.1 prepare_zap_oldest_mmu_page()
================================================================================

5.6.1.1 kvm_mmu_prepare_zap_page(kvm, sp, invalid_list)
================================================================================
; sp is the last entry of kvm->arch.arch_mmu_pages

5.6.1.1.1 mmu_zap_unsync_children()
================================================================================

5.6.1.1.1.1 kvm_mmu_prepare_zap_page()
================================================================================

5.6.1.1.1.2 mmu_pages_clear_parents()
================================================================================

5.6.1.1.2 kvm_mmu_page_unlink_children()
================================================================================

5.6.1.1.3 kvm_mmu_unlink_parents()
================================================================================

5.6.2 kvm_mmu_commit_zap_page()
================================================================================

5.7 __direct_map()
================================================================================

0. Related data structure
================================================================================

0.1 caches 
================================================================================

    pte_list_desc
    +-------------------------------------------+
    |sptes[PTE_LIST_EXT]                        |
    |    (u64*)                                 |
    |more                                       |
    |    (struct pte_list_desc*)                |
    |                                           |
    +-------------------------------------------+

    kvm_mmu_page
    +-------------------------------------------+
    |gfn                                        |
    |   (gfn_t)                                 |
    |spt                                        |
    |   (u64*)                                  |
    |gfns                                       |
    |   (gfn_t*)                                |
    +-------------------------------------------+

0.2  big picture
================================================================================

    kvm
    +--------------------------------------------------+
    |arch                                              |
    |    (struct kvm_arch)                             |
    |    +---------------------------------------------+
    |    |n_used_mmu_pages                             |
    |    |n_max_mmu_pages                              |
    |    |n_requested_mmu_pages                        |
    |    |    (unsigned int)                           |
    |    |                                             |
    |    |active_mmu_pages                             |    link list for kvm_mmu_page
    |    |zapped_obsolete_pages                        |
    |    |    (struct list_head)                       |
    |    |                                             |
    |    |mmu_page_hash[KVM_NUM_MMU_PAGES]             |    hash list for kvm_mmu_page
    |    |    +----------------------------------------+
    |    |    |role                                    |
    |    |    |   (union kvm_mmu_page_role)            |
    |    |    |gfn                                     |
    |    |    |   (gfn_t)                              |
    |    |    |gfns                                    |
    |    |    |   (gfn_t*)                             |
    |    |    |spt                                     |    shadow page table
    |    |    |   (u64*)                               |
    |    |    |root_count                              |
    |    |    |   (int)                                |
    |    |    |unsync                                  |
    |    |    |   (bool)                               |
    |    |    |unsync_children                         |
    |    |    |   (unsigned int)                       |
    |    |    |unsync_child_bitmap                     |
    |    |    |   (bitmap)                             |
    |    |    |                                        |
    |    |    |parent_ptes                             |
    |    |    |   (struct kvm_rmap_head)               |
    |    |    +----------------------------------------+
    |    |                                             |
    |    |                                             |
    |    +---------------------------------------------+
    |                                                  |
    |memslots[KVM_MEM_SLOTS_NUM]                       |
    |     (struct kvm_memory_slot)                     |
    |                                                  |
    |created_vcpus                                     |
    |     (int)                                        |
    |online_vcpus                                      |
    |     (atomic_t)                                   |
    |vcpus[KVM_MAX_VCPUS]                              |
    |     (struct kvm_vcpu*)                           |
    |    +---------------------------------------------+
    |    |kvm                                          |
    |    |    (struct kvm*)                            |
    |    |vcpu_id                                      |
    |    |cpu                                          |
    |    |    (int)                                    |
    |    |run                                          |
    |    |    (struct kvm_run)                         |
    |    |                                             |
    |    |arch                                         |
    |    |    (struct kvm_vcpu_arch)                   |
    |    |    +----------------------------------------+
    |    |    |mmu_pte_list_desc_cache                 |    pte_list_desc
    |    |    |mmu_page_header_cache                   |    kvm_mmu_page
    |    |    |mmu_page_cache                          |    page
    |    |    |    (struct kvm_mmu_memory_cache)       |
    |    |    |    +-----------------------------------+
    |    |    |    |nobjs                              |
    |    |    |    |    (int)                          |
    |    |    |    |objects[KVM_NR_MEM_OBJS]           |
    |    |    |    |    (void*)                        |
    |    |    |    +-----------------------------------+
    |    |    |                                        |
    |    |    |                                        |
    |    |    |walk_mmu                                |
    |    |    |    (struct kvm_mmu*)                   |
    |    |    |mmu                                     |
    |    |    |    (struct kvm_mmu)                    |
    |    |    |    +-----------------------------------+
    |    |    |    |root_hpa                           |    EPTP
    |    |    |    |     (hpa_t)                       |
    |    |    |    |root_level                         |
    |    |    |    |shadow_root_level                  |
    |    |    |    |     (u8)                          |
    |    |    |    |                                   |
    |    |    |    |page_fault()                       |    tdp_page_fault
    |    |    |    |set_cr3()                          |    vmx_set_cr3
    |    |    |    |inject_page_fault()                |
    |    |    |    |translate_gpa()                    |
    |    |    |    |                                   |
    |    |    |    |                                   |
    |    |    |    |                                   |
    |    |    |    |prev_roots[KVM_MMU_NUM_PREV_ROOTS] |
    |    |    |    |     (kvm_mmu_root_info)           |
    |    |    |    |   +-------------------------------+
    |    |    |    |   |cr3                            |
    |    |    |    |   |   (gpa_t)                     |
    |    |    |    |   |hpa                            |
    |    |    |    |   |   (hpa_t)                     |
    |    |    |    +---+-------------------------------+
    |    |    |                                        |
    |    |    |                                        |
    |    |    |                                        |
    |    |    |                                        |
    |    |    |                                        |
    +----+----+----------------------------------------+

0.3  kvm_mmu_page
================================================================================

                                                          kvm_mmu_page     <---------+
                                                          +--------------------------|---+
                                              +-----------|parent_ptes               |   |
                                              |           |                          |   |
                                              |           |                          |   |
                                              |           |spt--+   one page         |   |
                                              v           |     |   page->private ---+   |
                                              +-----------|-->  +-->+--------------------+
                                              |           |         |                    |
                                              |           |         |                    |
                                              |           |         |                    |
    kvm_mmu_page     <---------+              |           |   512   |                    |
    +--------------------------|---+          |           | entries |                    |
    |                          |   |          |           |         |                    |
    |                          |   |          |           |         |                    |
    |                          |   |          |           |         |                    |
    |spt--+   one page         |   |          |           +---------+--------------------+
    |     |   page->private ---+   |          |
    |     +-->+--------------------+          |
    |         |                    |          |
    |         |                 ---|----------+
    |         |                    |
    |   512   |                    |
    | entries |                    |
    |         |                    |
    |         |                    |
    |         |                 ---|----------+
    +---------+--------------------+          |
                                              |
                                              |
                                              |
                                              |           kvm_mmu_page     <---------+
                                              |           +--------------------------|---+
                                              |<----------|parent_ptes               |   |
                                              |           |                          |   |
                                              |           |                          |   |
                                              |           |spt--+   one page         |   |
                                              |           |     |   page->private ---+   |
                                              +-----------|-->  +-->+--------------------+
                                                          |         |                    |
                                                          |         |                    |
                                                          |         |                    |
                                                          |   512   |                    |
                                                          | entries |                    |
                                                          |         |                    |
                                                          |         |                    |
                                                          |         |                    |
                                                          +---------+--------------------+
