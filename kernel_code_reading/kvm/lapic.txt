1. vmx_create_vcpu
================================================================================

1.1 kvm_vcpu_init
================================================================================

1.1.1 kvm_arch_vcpu_init
================================================================================

1.1.1.1 kvm_create_lapic
================================================================================

2. vcpu_enter_guest
================================================================================

2.1 kvm_vcpu_reload_apic_access_page
================================================================================

2.1.1 kvm_x86_ops->set_apic_access_page_addr(), vmx_set_apic_access_page_addr
================================================================================

2.2 kvm_cpu_has_injectable_intr
================================================================================

2.2.1 kvm_cpu_has_extint
================================================================================

2.2.1.1 kvm_apic_accept_pic_intr
================================================================================

2.2.2 kvm_apic_has_interrupt
================================================================================

2.3 kvm_x86_ops->enable_irq_window
================================================================================

3. kvm_send_userspace_msi(kvm, &msi)
================================================================================
; this is invoked from userspace via KVM_SIGNAL_MSI

3.1 kvm_set_msi(KVM_USERSPACE_IRQ_SOURCE_ID)
================================================================================

3.1.1 kvm_msi_route_invalid()
================================================================================

3.1.2 kvm_set_msi_irq()
================================================================================

3.1.3 kvm_irq_delivery_to_apic()
================================================================================

3.1.3.1 kvm_irq_delivery_to_apic_fast()
===============================================================================

3.1.3.1.1 kvm_apic_present()
================================================================================
3.1.3.1.1 kvm_apic_match_dest()
================================================================================
3.1.3.1.1 kvm_lowest_prio_delivery()
================================================================================
3.1.3.1.1 kvm_apic_set_irq()
================================================================================

3.1.3.1.1 kvm_apic_enabled()
================================================================================

3.1.3.1.1 kvm_vector_hashing_enabled()
================================================================================

3.1.3.1.2 kvm_apic_map_get_dest_lapic()
================================================================================

3.1.3.1.3 kvm_apic_set_irq()
================================================================================

3.1.3.2 kvm_vector_to_index()
================================================================================

3.1.3.3 kvm_get_vcpu()
================================================================================

3.1.3.4 kvm_apic_set_irq() -> __apic_accept_irq()
================================================================================

3.1.3.4.1 __apic_accept_irq()
================================================================================

4. __apic_accept_irq()
================================================================================

4.1 APIC_DM_LOWEST
================================================================================

4.1.1 vcpu->arch.apic_arb_prio++
================================================================================

4.2 APIC_DM_FIXED
================================================================================

4.2.1 kvm_lapic_set_vector
================================================================================

4.2.2 kvm_lapic_clear_vector
================================================================================

4.2.3 kvm_x86_ops->deliver_posted_interrupt(vcpu, vector);
================================================================================

4.2.4 kvm_lapic_set_irr
================================================================================

4.2.5 kvm_make_request(KVM_REQ_EVENT, vcpu)
================================================================================

4.2.6 kvm_vcpu_kick()
================================================================================

4.3 APIC_DM_REMRD
================================================================================
4.3.1 kvm_make_request(KVM_REQ_EVENT, vcpu)
================================================================================
4.3.2 kvm_vcpu_kick()
================================================================================

4.4 APIC_DM_SMI
================================================================================
4.4.1 kvm_make_request(KVM_REQ_EVENT, vcpu)
================================================================================
4.4.2 kvm_vcpu_kick()
================================================================================

4.5 APIC_DM_NMI
================================================================================
4.5.1 kvm_inject_nmi(vcpu)
================================================================================
4.5.2 kvm_vcpu_kick(vcpu)
================================================================================

4.6 APIC_DM_INIT
================================================================================
4.6.1 apic->pending_events = (1UL << KVM_APIC_INIT);
================================================================================
4.6.2 kvm_make_request(KVM_REQ_EVENT, vcpu)
================================================================================
4.6.3 kvm_vcpu_kick()
================================================================================

4.7 APIC_DM_STARTUP
================================================================================
4.7.1 apic->sipi_vector = vector;
================================================================================
4.7.2 kvm_make_request(KVM_REQ_EVENT, vcpu)
================================================================================
4.7.3 kvm_vcpu_kick()
================================================================================

4.8 APIC_DM_EXTINT
================================================================================

5. vcpu_mmio_write
================================================================================

5.1 kvm_iodevice_write(vcpu, vcpu->arch.apic->dev)
================================================================================

5.2 apic_mmio_in_range()
================================================================================

5.3 apic_mmio_write() -> kvm_lapic_reg_write()
================================================================================

5.3.1 APIC_ID
================================================================================

5.3.2 APIC_TASKPRI
================================================================================

5.3.3 APIC_EOI
================================================================================

5.3.4 APIC_LDR
================================================================================

5.3.5 APIC_DFR
================================================================================

5.3.6 APIC_SPIV
================================================================================

5.3.7 APIC_ICR
================================================================================

5.3.7.1 apic_send_ipi()
================================================================================

5.3.7 
================================================================================

6. vcpu_enter_guest()
================================================================================

6.1 kvm_check_request(KVM_REQ_EVENT, vcpu)
================================================================================

6.2 kvm_apic_accept_events()
================================================================================

6.3 inject_pending_event(vcpu, req_int_win)
================================================================================

6.3.1 kvm_x86_ops->set_irq(vcpu) = vmx_inject_irq()
================================================================================

6.3.1.1 vmcs_write32(VM_ENTRY_INTR_INFO_FIELD, intr)
================================================================================

7. vcpu_block()
================================================================================

7.1 pre_block = vmx_pre_block
================================================================================

7.1.1 pi_pre_block
================================================================================

7.1.1.1 new.nv = POSTED_INTR_WAKEUP_VECTOR
================================================================================

7.2 kvm_vcpu_block()
================================================================================

7.3 post_block = vmx_post_block
================================================================================

7.3.1 pi_post_block = __pi_post_block
================================================================================

7.3.1.1 new.nv = POSTED_INTR_VECTOR
================================================================================

0. data structure
================================================================================

0.1 kvm_lapic
================================================================================

    vcpu
    +----------------------------------+
    |arch                              |
    |   (struct kvm_vcpu_arch)         |
    |   +------------------------------+
    |   |apic_arb_prio                 |
    |   |                              |
    |   |apic  --+                     |
    +---+------------------------------+
                 |
                 |
    kvm_lapic    v
    +----------------------------------+
    |vcpu                              |
    |    (struct kvm_vcpu*)            |
    +----------------------------------+
    |dev                               |
    |    (struct kvm_io_device)        |
    |    +-----------------------------+
    |    |ops                          | = apic_mmio_ops
    |    |   (kvm_io_device_ops*)      |
    +----+-----------------------------+
    |base_address                      | = MSR_IA32_APICBASE_ENABLE
    |    (unsigned long)               |
    +----------------------------------+
    |lapic_timer                       |
    |    (struct kvm_timer)            |
    |    +-----------------------------+
    |    |pending                      |
    |    |period                       |
    |    |timer                        | = apic_timer_fn
    |    |                             |
    +----+-----------------------------+
    |divide_count                      |
    |    (u32)                         |
    |isr_count                         |
    |    (s16)                         |
    |highest_isr_cache                 |
    |    (int)                         |
    |pending_events                    |
    |    (unsigned long)               |
    |sipi_vector                       |
    |    (unsigned int)                |
    +----------------------------------+
    |sw_enabled                        |
    |irr_pending                       |
    |lvt0_in_nmi_mode                  |
    |    (bool)                        |
    +----------------------------------+
    |vapic_addr                        |
    |    (gpa_t)                       |
    |                                  |
    |regs                              | = address to one page
    |    (void*)                       |
    +----------------------------------+

0.2 kvm_lapic_irq
================================================================================

    kvm_lapic_irq
    +----------------------------------+
    |vector                            |
    |    (u32)                         |
    |level                             |
    |    (bool)                        |
    |shorthand                         |
    |dest_id                           |
    |delivery_mode                     |
    |dest_mode                         |
    |trig_mode                         |
    |                                  |
    +----------------------------------+


0.3 diagram
================================================================================

    vmcs
    +----------------------------------+
    |guest state area                  |
    |   +------------------------------+
    |   |guest non-register state      |
    |   |   +--------------------------+
    |   |   |Guest interrupt status    |
    |   |   |   +----------------------+
    |   |   |   |Requesting virtual    |
    |   |   |   |   interrupt (RVI).   |
    |   |   |   +----------------------+
    |   |   |   |Servicing virtual     |
    |   |   |   |   interrupt (RVI).   |
    |   |   |   |                      |
    |   |   +---+----------------------+
    |   |                              |
    |   +------------------------------+
    |                                  |
    |vm-execution control              |
    |   +------------------------------+
    |   |APIC-access address           |
    |   |                              |
    |   |                              |         4K Virtual-APIC page
    |   |Virtual-APIC address      ----|-------->+-------------------------+
    |   |                              |     080H|Virtual task-priority    |
    |   |                              |         |        register (VTPR)  |
    |   |                              |     0A0H|Vrtl processor-priority  |
    |   |                              |         |        register (VPPR)  |
    |   |                              |     0B0H|Virtual end-of-interrupt |
    |   |                              |         |        register (VEOI)  |
    |   |                              |         |Virtual interrupt-service|
    |   |                              |         |        register (VISR)  |
    |   |                              |         |Virtual interrupt-request|
    |   |                              |         |        register (VIRR)  |
    |   |                              |     300H|Virtual interrupt-command|
    |   |                              |         |        register(VICR_LO)|
    |   |                              |     310H|Virtual interrupt-command|
    |   |                              |         |        register(VICR_HO)|
    |   |                              |         |                         |
    |   |                              |         +-------------------------+
    |   |                              |
    |   |                              |
    |   |TPR threshold                 |
    |   |EOI-exit bitmap               |
    |   |Posted-interrupt notification |
    |   |        vector                |
    |   |                              |
    |   |                              |    64 byte descriptor
    |   |                              |    511              255              0
    |   |Posted-interrupt descriptor   |--->+----------------+----------------+
    |   |        address               |    |                |                |
    |   |                              |    |                |                |
    |   |                              |    +----------------+----------------+
    |   |Pin-Based VM-Execution Ctrls  |
    |   |    +-------------------------+
    |   |    |Process posted interrupts|
    |   |    |                         |
    |   |    +-------------------------+
    |   |                              |
    |   |Primary Processor-Based       |
    |   |   VM-Execution Controls      |
    |   |    +-------------------------+
    |   |    |Interrupt window exiting |
    |   |    |Use TPR shadow           |
    |   |    |                         |
    |   |    +-------------------------+
    |   |                              |
    |   |Secondary Processor-Based     |
    |   |   VM-Execution Controls      |
    |   |    +-------------------------+
    |   |    |Virtualize APIC access   |
    |   |    |Virtualize x2APIC mode   |
    |   |    |APIC-register virtual    |
    |   |    |Virtual-intr delivery    |
    |   |    |                         |
    |   |    |                         |
    |   |    +-------------------------+
    |   |                              |
    |   +------------------------------+
    |                                  |
    +----------------------------------+


