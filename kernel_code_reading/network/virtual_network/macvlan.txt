1. rtnl_newlink() -> __rtnl_newlink()
================================================================================
1.1 dev = rtnl_create_link(, , macvtap_link_ops )
================================================================================
1.1.1 dev = alloc_netdev_mqs()
================================================================================
1.1.1.1 setup() -> macvtap_setup()
================================================================================
1.1.1.1.1 macvlan_common_setup(dev)
================================================================================
1.1.1.1.2 dev->tx_queue_len = TUN_READQ_SIZE
================================================================================
1.2 ops->newlink() -> macvtap_newlink(net, dev, tb, data, extack)
================================================================================
1.2.1 macvtap_dev *vlantap = netdev_priv(dev);
================================================================================
1.3 rtnl_configure_link(dev, ifm)
================================================================================

2. macvlan_common_newlink(src_net, dev, tb[], data, extack)
================================================================================
2.1 macvlan_dev *vlan = netdev_priv(dev)
================================================================================
2.2 lowerdev = __dev_get_by_index(src_net, nla_get_u32(tb[IFLA_LINK]))
================================================================================
2.3 macvlan_port_create(lowerdev), if (!netif_is_macvlan_port(lowerdev))
================================================================================
2.4 port = macvlan_port_get_rtnl(lowerdev)
================================================================================
2.5 register_netdevice(dev)
================================================================================

3. macvlan_start_xmit(skb, dev)
================================================================================
3.1 macvlan_queue_xmit(skb, dev)
================================================================================
3.1.1 macvlan_broadcast(skb, port, dev, MACVLAN_MODE_BRIDGE), A: broadcast
================================================================================
3.1.1.1 nskb = skb_clone(skb, GFP_ATOMIC)
================================================================================
3.1.1.2 macvlan_broadcast_one(nskb, vlan, eth, mode == BRIDGE), nskb->dev is setup to vlan->dev
================================================================================
3.1.1.3 netif_rx_ni(nskb), recieve skb on nskb->dev
================================================================================
3.1.2 macvlan_hash_lookup(port, eth->h_dest), B: unicast
================================================================================
3.1.3 dev_forward_skb(vlan->lowerdev, skb)
================================================================================
3.1.4 skb->dev = vlan->lowerdev, C: out side
================================================================================
3.1.5 dev_queue_xmit_accel(skb, NULL), send skb through skb->dev
================================================================================

0. data struct
================================================================================

0.1 macvlan_dev
================================================================================

                           lowerdev
                           +------------------------------+
                           |priv_flags                    |
                           |                              |
                           |rx_handler                    |  = macvlan_handle_frame
                           |rx_handler_data               |  = macvlan_port
                           +------------------------------+    (struct macvlan_port*)
                                                               +----------------------------------+
                                                               |dev                               |  = lowerdev
                                                               |   (struct net_device*)           |
                                                               |vlans                             |
                                                               |   (struct list_head)             |
                                                               |vlan_source_hash[MACVLAN_HASH_SIZE|
                                                               |vlan_hash[MACVLAN_HASH_SIZE]      |
                                                               |   (struct hlist_head)            |
                                                               |bc_queue                          |
                                                               |   (struct sk_buff_head)          |
                                                               |perm_addr[ETH_ALEN]               |  = lowerdev->dev_addr
                                                               |   (unsigned char)                |
                                                               |flags                             |
                                                               |count                             |
                                                               |   (int)                          |
                                                               |bc_work                           |
                                                               |   (struct work_struct)           |
                                                               |   +------------------------------+
                                                               |   |func                          |  = macvlan_process_broadcast
                                                               |   +------------------------------+
                                                               |                                  |
                                                               +----------------------------------+
                 

   
  net_device    +---------------------------------------+<--+
                |priv_flags                             |   |  =| IFF_MACVLAN
                |                                       |   |
                |rx_handler                             |   |
                |rx_handler_data                        |   |
  macvlan_dev   +---------------------------------------+   |
                |dev                                 ---|---+
                |lowerdev                               |
                |    (struct net_device*)               |
                |port                                   |  = lowerdev->rx_handler_data
                |    (struct macvlan_port*)             |
                |mode                                   |  VEPA | BRIDGE ...
                |    (enum macvlan_mode)                |
                |flags                                  |
                |    (unsigned int)                     |
                |macaddr_count                          |
                |    (unsigned int)                     |
                |set_features                           |
                |    (netdev_features_t)                |
                |mc_filter                              |
                | (DECLARE_BITMAP(MACVLAN_MC_FILTER_SZ))|
                |hlist                                  |
                |    (struct hlist_node)                |
                |                                       |
                |                                       |
                +---------------------------------------+

0.2 macvlan_dev under one net_device
================================================================================

               net_device(eth0)
               +------------------------------+
               |                              |
               |rx_handler_data               |  = macvlan_port
               +------------------------------+    (struct macvlan_port*)
                                                   +----------------------------------+
                                                   |vlan_hash[MACVLAN_HASH_SIZE]      |
                                                   |   (struct hlist_head)            |
                                                   +----------------------------------+
                                                                      |
                                                                      |
                                                                      |
                net_device(macvlan0)                                  |
                +---------------------------+<--+                     |
                |                           |   |                     |
                |                           |   |                     |
  macvlan_dev   +---------------------------+   |                     |
                |dev                     ---|---+                     |
                |lowerdev                   |  = eth0                 |
                |hlist                   ---|-------------------------+
                |    (struct hlist_node)    |                         |
                +---------------------------+                         |
                                                                      |
                                                                      |
                net_device(macvlan1)                                  |
                +---------------------------+<--+                     |
                |                           |   |                     |
                |                           |   |                     |
  macvlan_dev   +---------------------------+   |                     |
                |dev                     ---|---+                     |
                |lowerdev                   |  = eth0                 |
                |hlist                   ---|-------------------------+
                |    (struct hlist_node)    |                         |
                +---------------------------+                         |
