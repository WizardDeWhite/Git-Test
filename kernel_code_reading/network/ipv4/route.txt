1. ip_route_output_flow(net, flp4, sk)
================================================================================
1.1 rt = __ip_route_output_key(net, flp4) -> ip_route_output_key_hash(net, flp, NULL)
================================================================================
1.2 flp4->flowi4_oif = rt->dst.dev->ifindex
================================================================================
1.3 rt = xfrm_lookup_route(net, &rt->dst, flowi4_to_flowi(flp4), sk, 0)
================================================================================
1.4 return rt 
================================================================================

2. ip_route_output_key_hash(net, fl4, skb), major route resolver routine
================================================================================
2.1 fl4->flowi4_iif = LOOPBACK_IFINDEX;
================================================================================
2.2 fl4->flowi4_tos = tos & IPTOS_RT_MASK;
================================================================================
2.3 fl4->flowi4_scope = ((tos & RTO_ONLINK) ?  RT_SCOPE_LINK : RT_SCOPE_UNIVERSE);
================================================================================
2.4 ip_route_output_key_hash_rcu(net, fl4, &res, skb)
================================================================================
2.4.1 dev_out = __ip_dev_find(net, fl4->saddr, false) 
================================================================================
2.4.2 fl4->flowi4_oif = dev_out->ifindex
================================================================================
2.4.3 dev_out = dev_get_by_index_rcu(net, fl4->flowi4_oif)
================================================================================
2.4.4 fib_lookup(net, fl4, res, 0)
================================================================================
2.4.4.1 tb = fib_get_table(net, RT_TABLE_MAIN)
================================================================================
2.4.4.2 fib_table_lookup(tb, flp, res, )
================================================================================
2.4.5 fib_select_path(net, res, fl4, skb)
================================================================================
2.4.6 rth = __mkroute_output(res, fl4, orig_oif, dev_out, flags)
================================================================================



0. Data Struct
================================================================================

0.1 flowi4
================================================================================

   flowi4
   +---------------------------------------+
   |__fl_common                            |
   |    (struct flowi_common)              |
   |    +----------------------------------+
   |    |flowic_oif                        |  = output interface idx
   |    |flowic_iif                        |  = LOOPBACK_IFINDEX
   |    |   (int)                          |
   |    |flowic_mark                       |
   |    |   (__u32)                        |
   |    |flowic_tos                        |
   |    |flowic_scope                      |
   |    |flowic_proto                      |
   |    |flowic_flags                      |
   |    |   (__u8)                         |
   |    |flowic_secid                      |
   |    |   (__u32)                        |
   |    |flowic_uid                        |
   |    |   (kuid_t)                       |
   |    |flowic_tun_key                    |
   |    |                                  |
   |    |flowic_multipath_hash             |
   |    |   (__u32)                        |
   |    +----------------------------------+
   |saddr                                  |  = source ip
   |daddr                                  |  = destination ip
   |    (__be32)                           |
   |uli                                    |
   |    (union flowi_uli)                  |
   |    .ports   +-------------------------+
   |             |dport/sport              |
   |             |   (__be16)              |
   |    .icmpt   +=========================+
   |             |type/code                |
   |             |   (__u8)                |
   |    .dnports +=========================+
   |             |dport/sport              |
   |             |   (__le16)              |
   |             +=========================+
   |             |spi                      |
   |             |   (__be32)              |
   |             +=========================+
   |             |gre_key                  |
   |             |   (__be32)              |
   |    .mht     +=========================+
   |             |type                     |
   |             |   (__u8)                |
   |             |                         |
   +-------------+-------------------------+

0.1 fib_result
================================================================================

   fib_result
   +---------------------------------------+
   |prefix                                 |
   |    (__be32)                           |
   |prefixlen                              |
   |nh_sel                                 |
   |type                                   |  = RTN_UNSPEC
   |scope                                  |
   |    (unsigned char)                    |
   |tclassid                               |
   |    (u32)                              |
   |nhc                                    |
   |    (struct fib_nh_common*)            |
   |fi                                     |
   |    (struct fib_info*)                 |
   |table                                  |
   |    (struct fib_table*)                |
   |fa_head                                |
   |    (struct hlist_head*)               |
   |                                       |
   +---------------------------------------+

0.2 rtable
================================================================================

   rtable
   +---------------------------------------+
   |dst                                    |
   |    (struct dst_entr)                  |
   |    +----------------------------------+
   |    |dev                               |  = 
   |    |    (struct net_device*)          |
   |    |ops                               |  = ipv4_dst_ops
   |    |    (struct dst_ops*)             |
   |    |_metrics                          |
   |    |expires                           |
   |    |    (unsigned long)               |
   |    |input                             |  = dst_discard
   |    |output                            |  = dst_discard_out | ip_output
   |    |    (int (*)())                   |
   |    |flags                             |
   |    |    (unsigned short)              |
   |    |header_len                        |
   |    |trailer_len                       |
   |    |    (unsigned short)              |
   |    |                                  |
   |    +----------------------------------+
   |                                       |
   |rt_genid                               |
   |    (int)                              |
   |rt_flags                               |
   |    (unsigned int)                     |
   |rt_type                                |
   |    (__u16)                            |
   |rt_is_input                            |
   |rt_uses_gateway                        |
   |    (__u8)                             |
   |rt_iif                                 |
   |    (int)                              |
   |rt_gw_family                           |
   |    (u8)                               |
   +-------------------++------------------+
   |rt_gw4             ||rt_gw6            |
   |   (__be32)        || (struct in6_addr)|
   +-------------------++------------------+
   |                                       |
   |rt_uncached                            |
   |    (struct list_head)                 |
   |rt_uncached_list                       |
   |    (struct uncached_list*)            |
   |                                       |
   +---------------------------------------+


