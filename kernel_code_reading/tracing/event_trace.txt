1. TRACE_EVENT
================================================================================
       DECLARE_EVENT_CLASS(name,                              \
                            PARAMS(proto),                    \
                            PARAMS(args),                     \
                            PARAMS(tstruct),                  \
                            PARAMS(assign),                   \
                            PARAMS(print));                   \
       DEFINE_EVENT(name, name, PARAMS(proto), PARAMS(args));

1.1 DECLARE_EVENT_CLASS
================================================================================
#define DECLARE_EVENT_CLASS(call, proto, args, tstruct, assign, print) \
_TRACE_PERF_PROTO(call, PARAMS(proto));                                        \
static char print_fmt_##call[] = print;                                        \
static struct trace_event_class __used __refdata event_class_##call = { \
       .system                 = TRACE_SYSTEM_STRING,                  \
       .fields_array           = trace_event_fields_##call,            \
       .fields                 = LIST_HEAD_INIT(event_class_##call.fields),\
       .raw_init               = trace_event_raw_init,                 \
       .probe                  = trace_event_raw_event_##call,         \
       .reg                    = trace_event_reg,                      \
       _TRACE_PERF_INIT(call)                                          \
};


1.2 DEFINE_EVENT, events are defined in _ftrace_events section
================================================================================
#define DEFINE_EVENT(template, call, proto, args)                      \
                                                                       \
static struct trace_event_call __used event_##call = {                 \
       .class                  = &event_class_##template,              \
       {                                                               \
               .tp                     = &__tracepoint_##call,         \
       },                                                              \
       .event.funcs            = &trace_event_type_funcs_##template,   \
       .print_fmt              = print_fmt_##template,                 \
       .flags                  = TRACE_EVENT_FL_TRACEPOINT,            \
};                                                                     \
static struct trace_event_call __used                                  \
__attribute__((section("_ftrace_events"))) *__event_##call = &event_##call


2. Header file definition 
================================================================================

A header defines TRACE_EVENT():

        trace-events-sample.h
        +----------------------------------------------------------------+
        |#define TRACE_SYSTEM      sample-trace                          |
        |#define TRACE_SYSTEM_VAR  sample_trace                          |
        |                                                                |
        |#defined(TRACE_HEADER_MULTI_READ)                               |
        |#include <linux/tracepoint.h>                                   |
        |                                                                |
        |   #define TRACE_EVENT(name) DECLARE_TRACE(name)                |
        |   #define DECLARE_TRACE(name) __DECLARE_TRACE(name)            |
        |   #define __DECLARE_TRACE()                                   \|
        |           struct tracepoint __tracepoint_##name;              \|
        |           void trace_##name() {}                              \|
        |           int register_trace_##name() {                       \|
        |               tracepoint_probe_register();                    \|
        |           }                                                   \|
        |           int register_trace_prio_##name() {                  \|
        |               tracepoint_probe_register_prio();               \|
        |           }                                                   \|
        |           int unregister_trace_##name() {                     \|
        |               tracepoint_probe_unregister();                  \|
        |           }                                                   \|
        |           void check_trace_callback_type_##name()             \|
        |           bool trace_##name_enabled()                         \|
        |                                                                |
        |TRACE_EVENT(foo_bar, );                                         |  <- expand 1st time
        |#endif  // TRACE_HEADER_MULTI_READ                              |
        |                                                                |
        |#define TRACE_INCLUDE_FILE trace-events-sample                  |
        |#include <trace/define_trace.h>                                 |
        |                                                                |
        |   #undef TRACE_EVENT()                                         |
        |   #define TRACE_EVENT() DEFINE_TRACE()                         |
        |   #define DEFINE_TRACE() DEFINE_TRACE_FN()                    \|  # in "linux/tracepoint.h"
        |           char __tpstrtab_##name[] = #name;                   \|
        |                section("__tracepoints_strings")               \|
        |           struct tracepoint __tracepoint_##name =             \|
        |              {                                                \|
        |               __tpstrtab_##name,                              \|
        |               STATIC_KEY_INIT_FALSE,                          \|
        |               reg,      = NULL                                \|
        |               unreg,    = NULL                                \|
        |               NULL,                                           \|
        |              };                                               \|
        |                section("__tracepoints")                       \|
        |           __TRACEPOINT_ENTRY(name);                            |
        |                                                                |
        |   #define TRACE_HEADER_MULTI_READ                              |
        |   #include "trace-events-sample.h"                             |  # due to TRACE_HEADER_MULTI_READ
        |                                                                |  # we just have TRACE_EVENT() left
        |      TRACE_EVENT()                                             |  <- expand 2nd time
        |                                                                |
        |                                                                |
        |   #include <trace/trace_events.h>                              |
        |                                                                |
        |      #undef TRACE_EVENT()                                      |
        |      #define TRACE_EVENT()                                    \|
        |              DECLARE_EVENT_CLASS()                            \|
        |              DEFINE_EVENT()                                    |
        |      #undef DECLARE_EVENT_CLASS()                              |
        |      #define DECLARE_EVENT_CLASS()                            \|
        |              struct trace_event_raw_##name {};                \|
        |              struct trace_event_class event_class_##name;      |
        |      #undef DEFINE_EVENT()                                     |
        |      #define DEFINE_EVENT()                                    |
        |              struct trace_event_call event_##name;             |
        |                                                                |
        |      #include "trace-events-sample.h"                          |
        |         TRACE_EVENT()                                          |  <- expand 3rd time
        |                                                                |
        |      #undef DECLARE_EVENT_CLASS()                              |
        |      #define DECLARE_EVENT_CLASS()                            \|
        |              struct trace_event_data_offset_##name {}          |
        |                                                                |
        |      #include "trace-events-sample.h"                          |
        |         TRACE_EVENT()                                          |  <- expand 4th time
        |                                                                |
        |      #undef DECLARE_EVENT_CLASS()                              |
        |      #define DECLARE_EVENT_CLASS( , , , , , print)            \|
        |              enum print_line_t trace_raw_output_##name {      \|
        |                     trace_seq_printf(s, print);               \|
        |              }                                                \|
        |              struct trace_event_functions                     \|
        |                       trace_event_type_funcs_##name {         \|
        |                       .trace = trace_raw_output_##name,       \|
        |                     }                                          |
        |                                                                |
        |      #include "trace-events-sample.h"                          |
        |         TRACE_EVENT()                                          |  <- expand 5th time
        |                                                                |
        |      #undef DECLARE_EVENT_CLASS()                              |
        |      #define DECLARE_EVENT_CLASS()                            \|
        |              struct trace_event_fields                        \|
        |                     trace_event_fields_##name[] = { tstruct }; |
        |                                                                |
        |      #include "trace-events-sample.h"                          |
        |         TRACE_EVENT()                                          |  <- expand 6th time
        |                                                                |
        |      #undef DECLARE_EVENT_CLASS()                              |
        |      #define DECLARE_EVENT_CLASS()                            \|
        |              int trace_event_get_offsets_##name(              \|
        |                  struct trace_event_data_offset_##name off,   \|
        |                  proto) {}                                     |
        |                                                                |
        |      #include "trace-events-sample.h"                          |
        |         TRACE_EVENT()                                          |  <- expand 7th time
        |                                                                |
        |      #undef DECLARE_EVENT_CLASS()                              |
        |      #define DECLARE_EVENT_CLASS()                            \|
        |              void trace_event_raw_event_##name() {}            |
        |      #undef DEFINE_EVENT()                                     |
        |      #define DEFINE_EVENT()                                   \|
        |              void ftrace_test_probe_##name() {}                |
        |                                                                |
        |      #include "trace-events-sample.h"                          |
        |         TRACE_EVENT()                                          |  <- expand 8th time
        |                                                                |
        |      #undef DECLARE_EVENT_CLASS()                              |
        |      #define DECLARE_EVENT_CLASS()                            \|
        |              char print_fmt_##name[] = print;                 \|
        |              struct trace_event_class event_class_##name = {}; |
        |      #undef DEFINE_EVENT()                                     |
        |      #define DEFINE_EVENT()                                   \|
        |              struct trace_event_call event_##name = {};       \|
        |              struct trace_event_call *__event_##name =        \|
        |                     section("_ftrace_events") &event_##name;   |
        |                                                                |
        |      #include "trace-events-sample.h"                          |
        |         TRACE_EVENT()                                          |  <- expand 9th time
        |                                                                |
        +----------------------------------------------------------------+

2. sections and lds
================================================================================

#define FTRACE_EVENTS()	. = ALIGN(8);					\
			__start_ftrace_events = .;			\
			KEEP(*(_ftrace_events))				\
			__stop_ftrace_events = .;			\
			__start_ftrace_eval_maps = .;			\
			KEEP(*(_ftrace_eval_map))			\
			__stop_ftrace_eval_maps = .;

3. event_init(trace_event_call *call)
================================================================================
3.1 trace_event_name(call)
================================================================================
3.1.1 return call->tp->name
================================================================================
3.2 call->class->raw_init(call) -> trace_event_raw_init
================================================================================
3.2.1 register_trace_event(&call->event)
================================================================================

0. Reference
================================================================================

0.1. How to use TRACE_EVENT
================================================================================
https://lwn.net/Articles/379903/

samples/trace_events/trace-events-sample.[ch]


0.2. Some internal
================================================================================
A very good reading for event trace

https://www.ibm.com/developerworks/cn/linux/1609_houp_ftrace/index.html



0. Data Structure
================================================================================

0.1 struct trace_event_call, the center of those data structures
================================================================================

ftrace_events
    (struct list_head)
    |
    |    trace_event_call             trace_event_call             trace_event_call         
    |    +-----------------------+    +-----------------------+    +-----------------------+
    +--->|list                   |--->|list                   |--->|list                   |
         |    (struct list_head) |    |    (struct list_head) |    |    (struct list_head) |
         +-----------------------+    +-----------------------+    +-----------------------+



0.2 struct tracepoint
================================================================================

     tracepoint
     +------------------------------+
     |name                          |  = "name"
     |    (char *)                  |
     |key                           |  = STATIC_KEY_INIT_FALSE
     |    (struct static_key)       |
     |regfunc                       |  = NULL
     |unregfunc                     |  = NULL
     |    ()                        |
     |funcs                         |  = NULL
     |    (struct tracepoint_func*) |
     |    +-------------------------+
     |    |func                     |
     |    |data                     |
     |    |    (void *)             |
     |    |prio                     |
     |    |    (int)                |
     +----+-------------------------+

0.3 struct trace_event_class
================================================================================

     trace_event_class
     +------------------------------+
     |name                          |  = TRACE_SYSTEM_STRING
     |    (char *)                  |
     |probe                         |  = trace_event_raw_event_##name
     |    (void *)                  |
     |reg                           |  = trace_event_reg
     |    (void *)                  |
     |raw_init                      |  = trace_event_raw_init
     |    (int *)                   |
     |fields_array                  |  = trace_event_fields_##name
     |    (trace_event_fields *)    |
     |                              |
     |                              |
     +------------------------------+

0.4 struct trace_event_functions
================================================================================

ftrace_event_list(struct list_head)
  |
  |  struct trace_event
  +->+------------------------------+
     |list                          |
     |    (struct list_head)        |
     |node                          |
     |    (struct hlist_node)       |
     |type                          |  = sort of index in ftrace_event_list
     |    (int)                     |    also a key in event_hash[]
     |funcs                         |  = &trace_event_type_funcs_##name
     |  (trace_event_functions)     |
     |   +--------------------------+
     |   |trace                     |  = trace_raw_output_##name -> trace_seq_printf(s, print)
     |   |raw                       |  = trace_nop_print
     |   |hex                       |  = trace_nop_print
     |   |binary                    |  = trace_nop_print
     |   |    (trace_print_func)    |
     +---+--------------------------+

event_hash[128] (sturct hlist_head)


0.5 trace_event_call <-> (tracepoint, trace_event, trace_event_class)
================================================================================

    trace_event_call
    +------------------------------+
    |list                          |
    |    (struct list_head)        |
    |name | tp                     |  = &__tracepoint_##name
    |(char * | struct tracepoint *)|
    |    +-------------------------+
    |    |name                     |  = "name"
    |    |    (char *)             |
    |    |key                      |  = STATIC_KEY_INIT_FALSE
    |    |    (struct static_key)  |
    |    |regfunc                  |  = NULL
    |    |unregfunc                |  = NULL
    |    |    ()                   |
    |    |funcs                    |  = NULL
    |    |(struct tracepoint_func*)|
    |    |                         |
    |    +-------------------------+
    |class                         |  = &event_class_##name
    |   (struct trace_event_class*)|
    |    +-------------------------+
    |    |name                     |  = TRACE_SYSTEM_STRING
    |    |    (char *)             |
    |    |probe                    |  = trace_event_raw_event_##name
    |    |    (void *)             |
    |    |reg                      |  = trace_event_reg
    |    |    (void *)             |
    |    |raw_init                 |  = trace_event_raw_init
    |    |    (int *)              |
    |    |fields_array             |  = trace_event_fields_##name
    |    |   (trace_event_fields *)|
    |    +-------------------------+
    |event                         |  # be registered by register_trace_event()
    |    (struct trace_event)      |
    |    +-------------------------+
    |    |funcs                    |  = &trace_event_type_funcs_##name
    |    |  (trace_event_functions)|
    |    |  +----------------------+
    |    |  |trace                 |  = trace_raw_output_##name -> trace_seq_printf(s, print)
    |    |  |raw                   |  = trace_nop_print
    |    |  |hex                   |  = trace_nop_print
    |    |  |binary                |  = trace_nop_print
    |    |  |    (trace_print_func)|
    |    +--+----------------------+
    |flags                         |
    |    (int)                     |
    |print_fmt                     |  = print_fmt_##name
    |    (char *)                  |
    |                              |
    +------------------------------+


print_fmt_##name is passed by in TRACE_EVENT( , , , , print)

