1. move_vma(vma, old_addr, old_len, new_len, new_addr, )
================================================================================
1.1 new_pgoff = vma->vm_pgoff + ((old_addr - vma->vm_start) >> PAGE_SHIFT), keep vm_pgoff
================================================================================
1.2 new_vma = copy_vma(&vma, new_addr, new_len, new_pgoff, )
================================================================================
1.2.1 find_vma_links(mm, addr, addr + len, &prev, &rb_link)
================================================================================
1.2.2 vma_merge(), try to merge one
================================================================================
1.2.3 if not merged, vma_area_dup(vma)
================================================================================
1.3 move_page_tables(vma, old_addr, new_vma, new_addr, old_len, )
================================================================================
1.3.1 move_huge_pmd(vma, old_addr, new_addr, old_end, old_pmd, new_pmd)
================================================================================
1.3.2 split_huge_pmd(vma, old_pmd, old_addr)
================================================================================
1.3.3 move_normal_pmd(vma, old_addr, new_addr, old_end, old_pmd, new_pmd)
================================================================================
1.3.4 move_ptes(vma, old_pmd, old_addr, old_addr + extent, new_vma, new_pmd, new_addr, )
================================================================================
1.3.4.1 pte = ptep_get_and_clear(mm, old_addr, old_pte), old pte is cleared
================================================================================
1.3.4.2 set_pte_at(mm, new_addr, new_pte, pte), set it to new table
================================================================================
1.4 do_munmap(mm, old_addr, old_len) -> __do_munmap(mm, start, len, uf, false)
================================================================================
