1. swapfile_init()
================================================================================
1.1 swap_avail_heads = kmalloc_array(nr_node_ids, )
================================================================================
1.2 plist_head_init(&swap_avail_heads[nid])
================================================================================


2. swapon, SYSCALL_DEFINE2
================================================================================
2.1 p = alloc_swap_info()
================================================================================
2.2 INIT_WORK(&p->discard_work, swap_discard_work)
================================================================================
2.3 swap_file = file_open_name(name, )
================================================================================
2.4 p->swap_file = swap_file
================================================================================
2.5 mapping = swap_file->f_mapping
================================================================================
2.6 inode = mappint->host
================================================================================
2.7 claim_swapfile(p, inode)
================================================================================
2.7.1 setup p->bdev and lock inode
================================================================================
2.8 page = read_mapping_page(mapping, 0, swap_file), read head into page
================================================================================
2.8.1 read_cache_page(mapping, 0, NULL, swap_file), read into page cache
================================================================================
2.8.1.1 a long way to add page into address_space, set page->[mapping|index]
================================================================================
2.9 swap_header = kmap(page), swap_header points to virtual address of page
================================================================================
2.10 maxpages = read_swap_header(p, swap_header, inode), parse swap_header
================================================================================
2.10.1 maxpages = max_swapfile_size(), pages allowed for swap device
================================================================================
2.10.2 last_page = swap_header->info.last_page
================================================================================
2.10.3 p->highest_bit = maxpages - 1, maxpages must be order 2?
================================================================================
2.11 swap_map = vzalloc(maxpages), each page has a slot
================================================================================
2.12 swap_cgroup_swapon(p->type, maxpages)
================================================================================
2.13 nr_extents = setup_swap_map_and_extents(p, swap_header, swap_map, cluster_info, maxpages, &span)
================================================================================
2.13.1 cluster_list_init(&p->free_cluster)
================================================================================
2.13.2 cluster_list_init(&p->discard_clusters)
================================================================================
2.13.3 setup_swap_extents(p, span)
================================================================================
2.14 init_swap_address_space(p->type, maxpages)
================================================================================
2.14.1 nr = DIV_ROUND_UP(maxpages, SWAP_ADDRESS_SPACE_PAGES), one swap has N address_space
================================================================================
2.14.2 spaces = kvcalloc(nr, sizeof(struct address_space), )
================================================================================
2.14.3 space = spaces + i;
================================================================================
2.14.4 space->a_ops = &swap_aops
================================================================================
2.14.5 nr_swapper_spaces[type] = nr
================================================================================
2.14.6 swapper_spaces[type] = spaces, save those space to global variable
================================================================================
2.15 enable_swap_info(p, prio, swap_map, cluster_info, frontswap_map)
================================================================================
2.15.1 setup_swap_info(p, prio, swap_map, cluster_info)
================================================================================
2.15.2 _enable_swap_info(p)
================================================================================
2.15.2.1 plist_add(&p->list, &swap_active_head)
================================================================================
2.15.2.2 add_to_avail_list(p)
================================================================================

3. swap_discard_work() -> swap_do_scheduled_discard(si), free page and put back to free list
================================================================================
3.1 cluster_list_del_first(&si->discard_clusters, info), remove from list
================================================================================
3.2 discard_swap_cluster(si, idx * SWAPFILE_CLUSTER, SWAPFILE_CLUSTER)
================================================================================
3.2.1 blkdev_issue_discard(si->bdev, start_block, nr_blocks, )
================================================================================
3.3 __free_cluster(si, idx)
================================================================================
3.4 memset(si->swap_map + idx * SWAPFILE_CLUSTER, 0, SWAPFILE_CLUSTER)
================================================================================

4. swap_readpage/writepage
================================================================================

0. /proc/swaps
================================================================================

0.1 procswaps_init()
================================================================================
0.1.1 proc_create("swaps", 0, NULL, &swaps_proc_ops)
================================================================================

0.2 swaps_open(inode, file)
================================================================================
0.2.1 seq_open(file, &swaps_op)
================================================================================
0.2.2 seq = file->private_data
================================================================================

0.3 swap_start(struct seq_file *swap, loff_t *pos), return a swap_info_struct
================================================================================
0.3.1 mutex_lock(&swapon_mutex)
================================================================================
0.3.2 return SEQ_START_TOKEN if (!*pos)
================================================================================

0.4 swap_show(struct seq_file *swap, void *v)
================================================================================
0.4.1 file = si->swap_file
================================================================================
0.4.2 len = seq_file_path(swap, file, " \t\n")
================================================================================


0. data structure
================================================================================
global variables

struct address_space *swapper_spaces[MAX_SWAPFILES] __read_mostly;
static unsigned int nr_swapper_spaces[MAX_SWAPFILES] __read_mostly;

DEFINE_SPINLOCK(swap_lock);
struct swap_info_struct *swap_info[MAX_SWAPFILES];
static unsigned int nr_swapfiles;


PLIST_HEAD(swap_active_head);
static struct plist_head *swap_avail_heads;

0.1 swap_info_struct
================================================================================



                                0     1              nr_swapfiles      MAX_SWAPFILES
                                |     |                 |                 |
                                v     v                 v                 v
           swap_info         +-----+-----+-----+-----+-----+-----+-----+-----+
                             |     |     |     |     |     |     |     |     |
                             |     |     |     |     |     |     |     |     |
                             +-----+-----+-----+-----+-----+-----+-----+-----+
                                            ^
                                            |
                                            |
                                            +----------------------+
                                                                   |
                                                                   |
                                                                   |
                             struct swap_info_struct               |
                             +--------------------------------+    |
                             |type                         ---|----+
                             |                                | index in swap_info,
                             |                                | swapper_spaces, nr_swapper_spaces
                             |                                |
                             |flags                           | SWP_USED
                             |                                |
                             |prio                            |
                             |    (signed short)              |
swap_active_head      <--->  |list                            |
swap_avail_heads[]    <--->  |avail_lists[0]                  |
                             |    (struct plist_node)         |
                             |    +---------------------------+
                             |    |prio                       | = -prio
                             |    |     (int)                 |
                             |    |node_list                  |
                             |    |prio_list                  |
                             |    |     (struct list_head)    |
                             |    +---------------------------+
                             |    (signed char)               |
                             |discard_work                    | = swap_discard_work
                             |    (struct work_struct)        |
                             |swap_file                       |
                             |    (struct file *)             |
                             |                                |
                             |max                             | = maxpages
                             |pages                           | = nr_good_pages
                             |swap_map                        | [maxpage]
                             |    (char *)                    | each element represent page status
                             |                                |
                             |                                |
                             |cluster_next                    |
                             |cluster_nr                      |
                             |    (unsigned int)              |
                             |percpu_cluster                  |
                             |    (struct percpu_cluster *)   |
                             |    +---------------------------+
                             |    |index                      |
                             |    |   (swap_cluster_info)     |
                             |    |next                       |
                             |    |   (unsigned int)          |
                             |    +---------------------------+
                             |                                |
                             |cluster_info                    | [maxpages/SWAPFILE_CLUSTER]
                             |    a block of swap disk space  | 
                             |    with SWAPFILE_CLUSTER pages |
                             |    this is a array             |
                             |                                |
                             |    (swap_cluster_info*)        |
                             |    +---------------------------+
                             |    |lock                       |
                             |    |    (spinlock_t)           |   +---------+   +---------+   +---------+   +---------+
                             |    |data:24                    |   |1        |   |3        |   |count    |   |         |
                             |    |flags:8                    |   |FREE     |   |FREE     |   |         |   |FREE     |
                             |    |    (unsigned int)         |   +---------+   +---------+   +---------+   +---------+
                             |    |                           |    ^      |       ^     |                     ^
                             |    +---------------------------+    |      |       |     |                     |
                             |                                |    |      +-------+     +---------------------+
                             |free_clusters                   |    |                                          |
                             |discard_clusters                |    |                                          |
                             |    (swap_cluster_list)         |    |                                          |
                             |    +---------------------------+    |                                          |
                             |    |head                     --|----+                                          |
                             |    |tail                       |                                               |
                             |    |   (swap_cluster_info)   --|-----------------------------------------------+
                             |    |                           |
                             |    +---------------------------+
                             |                                |
                             |                                |
                             |                                |
                             |swap_extent_root                | extent rbtree
                             |    (struct rb_root)            |
                             |    +---------------------------+
                             |    |                           |
                             |    |start_page                 |
                             |    |start_block                |
                             |    |nr_pages                   |
                             |    |                           |
                             |    +---------------------------+
                             |                                |
                             |                                |
                             |                                |
                             |                                |
                             +--------------------------------+


0.2 address_space
================================================================================

         struct address_space
         +--------------------------------+
         |host                            |
         |     (struct inode *)           |
         |i_pages                         |  cached pages
         |     (struct xarray)            |
         |i_mmap                          |
         |     (struct rb_root_cached)    |  tree of mapping
         |                                |
         |                                |
         |                                |
         |a_ops                           |  = swap_aops
         |     (address_space_operation)  |
         +--------------------------------+


0.3 swap_header
================================================================================

         swap_header
         +--------------------------------+
         |bootbits[1024]                  |
         |     (char)                     |
         |version                         |
         |last_page                       |
         |nr_badpages                     |
         |     (__u32)                    |
         |sws_uuid[16]                    |
         |sws_volume[16]                  |
         |     (unsigned char)            |
         |padding[117]                    |
         |badpages[1]                     |  [nr_badpages]
         |     (__u32)                    |
         +--------------------------------+
