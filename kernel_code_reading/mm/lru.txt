2. lru per cpu cache apis
================================================================================

2.0 pagevec_lru_move_fn(pagevec, move_fn, arg)
================================================================================
2.0.1 pgdat = page_pgdat(page)
================================================================================
2.0.2 lruvec = mem_cgroup_page_lruvec(page, pgdat);
================================================================================
2.0.3 (*move_fn)(page, lruvec, arg);
================================================================================
2.0.4 pagevec_reinit(pvec)
================================================================================

2.1 __lru_cache_add(page), add page to lru_add_pvec cache
===============================================================================
2.1.1 pvec = get_cpu_var(lru_add_pvec)
===============================================================================
2.1.2 pagevec_add(pvec, page), add page to cache
===============================================================================
2.1.3 __pagevec_lru_add(pvec)
===============================================================================
2.1.3.2 pagevec_lru_move_fn(pvec, __pagevec_lru_add_fn, NULL);
===============================================================================
move page from cache to lru list

2.2 rotate_reclaimable_page(page), move page to the end
===============================================================================
2.2.1 pvec = this_cpu_ptr(&lru_rotate_pvecs) 
===============================================================================
2.2.2 pagevec_add(pvec, page)
===============================================================================
2.2.3 pagevec_move_tail_fn(pvec)
===============================================================================
2.2.3.1 pagevec_lru_move_fn(pvec, pagevec_move_tail_fn, &pgmoved);
===============================================================================
move alreay in list page to the list end

2.3 deactivate_page(page), from active to non-active
===============================================================================
2.3.1 pvec = &get_cpu_var(&lru_deactivate_pvecs) 
===============================================================================
2.3.2 pagevec_add(pvec, page)
===============================================================================
2.3.3 pagevec_lru_move_fn(pvec, lru_deactivate_fn, &pgmoved);
===============================================================================
move page from active list to non-active list
2.3.3.1 lru = page_lru_base_type(page)
===============================================================================
2.3.3.2 del_page_from_lru_list(page, lruvec, lru + LRU_ACTIVE)
===============================================================================
2.3.3.3 add_page_to_lru_list(page, lruvec, lru);
===============================================================================
2.3.4 put_cpu_var(lru_deactivate_pvecs) 
===============================================================================

2.4 activate_page(page), from non-active to active
===============================================================================
2.4.1 pvec = &get_cpu_var(&activate_page_pvecs) 
===============================================================================
2.4.2 pagevec_add(pvec, page)
===============================================================================
2.4.3 pagevec_lru_move_fn(pvec, __activate_page, &pgmoved);
===============================================================================
2.4.3.1 lru = page_lru_base_type(page)
===============================================================================
2.4.3.2 del_page_from_lru_list(page, lruvec, lru)
===============================================================================
2.4.3.3 add_page_to_lru_list(page, lruvec, lru + LRU_ACTIVE);
===============================================================================
2.4.4 put_cpu_var(activate_page_pvecs) 
===============================================================================

0. Reference
================================================================================
someone's blog
https://www.cnblogs.com/tolimit/p/5447448.html

gorman's doc
https://www.kernel.org/doc/gorman/html/understand/understand013.html

0. Data Structure
================================================================================

0.1 lruvec, lru list
================================================================================

    lruvec
    +---------------------------+
    |lists[NR_LRU_LISTS]        |
    |reclaim_stat               |
    |    (zone_reclaim_stat)    |
    |inactive_age               |
    |refaults                   |
    |    (unsigned long)        |
    +---------------------------+

0.2 pagevec, lru per cpu cache
================================================================================
lru_add_pvec
lru_rotate_pvecs
lru_deactivate_file_pvecs
lru_deactivate_pvecs
lru_lazyfree_pvecs
activate_page_pvecs

    pagevec
    +---------------------------+
    |pages[PAGEVEC_SIZE]        |
    |    (struct page*)         |
    |nr                         |
    |    (char)                 |
    |percpu_pvec_drained        |
    |    (bool)                 |
    +---------------------------+
