1. idr_init()
================================================================================
static inline void idr_init(struct idr *idr)
{
	INIT_RADIX_TREE(&idr->idr_rt, IDR_RT_MARKER);
	idr->idr_next = 0;
}

2. idr_alloc(idr, ptr, start, end, gfp)
================================================================================
2.1 idr_alloc_u32(idr, ptr, &id, end, gfp)
================================================================================
2.1.1 radix_tree_iter_init(&iter, id)
================================================================================
2.1.1.1 iter->index = 0
================================================================================
2.1.1.2 iter->next_index = id
================================================================================
2.1.2 slot = idr_get_free(&idr->idr_rt, &iter, gfp, max - base)
================================================================================
2.1.3 *id = iter.index + base
================================================================================


0. data structure
================================================================================

    idr
    +------------------------------+
    |idr_base                      |
    |idr_next                      |
    |    (unsigned int)            |
    |idr_rt                        |
    |    (struct radix_tree_root)  |
    |    (xarry)                   |
    |                              |
    +------------------------------+

