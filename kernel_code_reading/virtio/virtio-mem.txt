1. virtio_mem_probe(vdev)
================================================================================
1.1 vdev->priv = vm = kzalloc()
================================================================================
1.2 virtio_mem_init_vq(vm)
================================================================================
1.2.1 vq = virtio_find_single_vq(vm->vdev, virtio_mem_handle_response, )
================================================================================
1.2.1.1 vdev->config->find_vqs(vdev, 1, &vq, ) -> vp_modern_find_vqs()
================================================================================
1.2.2 vm->vq = vq
================================================================================
1.3 virtio_mem_init(vm)
================================================================================
1.3.1 vm->first_mb_id = virtio_mem_phys_to_mb_id(vm->addr - 1 + memory_block_size_bytes());
================================================================================
1.3.2 vm->last_mb_id = virtio_mem_phys_to_mb_id(vm->addr + vm->region_size) - 1;
================================================================================
1.4 virtio_mem_create_resource(vm)
================================================================================
1.4.1 vm->parent_resource = __request_mem_region(vm->addr, vm->region_size, name, IORESOURCE_SYSTEM_RAM);
================================================================================
1.5 register_memory_notifier(&vm->memory_notifier)
================================================================================
1.5 register_virtio_mem_device(vm)
================================================================================
1.5.1 rc = set_online_page_callback(&virtio_mem_online_page_cb);
================================================================================
1.5.2 list_add_rcu(&vm->next, &virtio_mem_devices);
================================================================================
1.6 virtio_device_ready(vdev);
================================================================================
1.6.1 dev->config->set_status(dev, status | VIRTIO_CONFIG_S_DRIVER_OK);
================================================================================
1.7 atomit_set(&vm->config_changed, 1)
================================================================================
1.8 queue_work(system_freezable_wq, &vm->wq)
================================================================================

2. virtio_mem_run_wq(work)
================================================================================
2.1 vm = container_of(work, virtio_mem, wq)
================================================================================
2.2 hrtimer_cancel(&vm->retry_timer)
================================================================================
2.3 virtio_mem_refresh_config(vm), retrieve config
================================================================================
2.4 virtio_mem_plug_request(vm, diff)
================================================================================
2.4.1 virtio_mem_mb_plug_any_sb(vm, mb_id, &nb_sb, true)
================================================================================
2.4.2 virtio_mem_mb_plug_and_add(vm, mb_id, &nb_sb)
================================================================================
2.4.3 virtio_mem_prepare_next_mb(vm, &mb_id)
================================================================================
2.4.4 virtio_mem_mb_plug_and_add(vm, mb_id, &nb_sb)
================================================================================
2.5 virtio_mem_unplug_request(vm, diff)
================================================================================

3. virtio_mem_memory_notifier_cb(action, arg), triggered by memory_notify, e.g. online_pages()
================================================================================
3.1 :MEM_GOING_ONLINE: virtio_mem_notify_going_online()
================================================================================
3.2 :MEM_GOING_OFFLINE: virtio_mem_notify_going_offline()
================================================================================
3.3 :MEM_OFFLINE: virtio_mem_notify_offline()
================================================================================
3.4 :MEM_ONLINE: virtio_mem_notify_online()
================================================================================
3.4.1 virtio_mem_mb_set_state(vm, mb_id, VIRTIO_MEM_MB_STATE_ONLINE);
================================================================================


4. mb sb helpers
================================================================================
4.1 virtio_mem_mb_plug_and_add(vm, mb_id, nb_sb)
================================================================================
4.1.1 virtio_mem_mb_plug_sb(vm, mb_id, 0, count)
================================================================================
4.1.1.1 virtio_mem_send_plug_request(vm, addr, size);
================================================================================
4.1.1.2 virtio_mem_mb_set_sb_plugged(vm, mb_id, sb_id, count);
================================================================================
4.1.2 virtio_mem_mb_set_state(vm, mb_id, VIRTIO_MEM_MB_STATE_OFFLINE|PARTIAL)
================================================================================
4.1.3. virtio_mem_mb_add(vm, mb_id)
================================================================================
4.1.3.1 add_memory_driver_managed(nid, addr, memory_block_size_bytes())
================================================================================

4.2 virtio_mem_mb_plug_any_sb(vm, mb_id, nb_sb, online)
================================================================================
4.2.1 sb_id = virtio_mem_mb_first_unplugged_sb(vm, mb_id)
================================================================================
4.2.2 virtio_mem_mb_test_sb_plugged(vm, mb_id, sb_id + count, 1)
================================================================================
4.2.3 virtio_mem_mb_plug_sb(vm, mb_id, sb_id, count)
================================================================================
4.2.4 virtio_mem_fake_online(pfn, nr_pages)
================================================================================
4.2.4.1 virtio_mem_clear_fake_offline(pfn, 1 << order, true/false)
================================================================================
4.2.4.2 generic_online_page(page, order), add to buddy
================================================================================
4.2.5 virtio_mem_mb_set_state(vm, mb_id, VIRTIO_MEM_MB_STATE_ONLINE)
================================================================================

4.3 virtio_mem_mb_unplug_sb_online(vm, mb_id, sb_id, count)
================================================================================
4.3.1 alloc_contig_range(start_pfn, start_pfn + nr_pages, ), grab the pages by us
================================================================================
4.3.2 virtio_mem_set_fake_offline(start_pfn, nr_pages, true)
================================================================================
4.3.3 adjust_managed_page_count(pfn_to_page(start_pfn), -nr_pages);
================================================================================
4.3.4 virtio_mem_mb_unplug_sb(vm, mb_id, sb_id, count), let host release mem
================================================================================
4.3.5 virtio_mem_mb_set_state(vm, mb_id, VIRTIO_MEM_MB_STATE_ONLINE_PARTIAL)
================================================================================

5. add_memory_driver_managed(nid, addr, memory_block_size_bytes())
================================================================================
5.1 add_memory_resource(nid, res) -.-.-> online_pages()
================================================================================
5.1.1 memory_notify(MEM_GOING_ONLINE, arg) -> virtio_mem_memory_notifier_cb()
================================================================================
5.1.1.1 virtio_mem_notify_going_online()
================================================================================
5.1.2 online_pages_range() 
================================================================================
5.1.2.1 online_page_callback(pfn, order) -> virtio_mem_online_page_cb
================================================================================
5.1.2.2 online_mem_sections()
================================================================================

6. virtio_mem_online_page_cb
================================================================================
6.1 addr = page_to_phys(page);
================================================================================
6.2 mb_id = virtio_mem_phys_to_mb_id(addr);
================================================================================
6.3 virtio_mem_owned_mb(vm, mb_id)
================================================================================
6.4 sb_id = virtio_mem_phys_to_sb_id(vm, addr);
================================================================================
6.5 generic_online_page(page, order), if plugged
================================================================================
6.6 virtio_mem_set_fake_offline(), if not plugged
================================================================================

0. Data structure
================================================================================

Usage: https://patchwork.kernel.org/cover/11288697/

0.1 virtio_mem
================================================================================

virtio_mem_devices
 |
 |  virtio_mem
 |  +-------------------------------------+<---------+
 |  |vdev                                 |          |
 |  |    (struct virtio_device*)          |          |
 |  |    +--------------------------------+          |
 |  |    |priv                         ---|----------+
 |  |    |    (void *)                    |
 |  |    |                                |
 |  |    |config                          |  = &virtio_pci_config_ops
 |  |    |    (struct virtio_config_ops*) |
 |  |    +--------------------------------+
 +->|next                                 |
    |    (struct list_head)               |
    |                                     |
    |host_resp                            |
    |    (wait_queue_head_t)              |
    |wq                                   |  = virtio_mem_run_wq
    |    (struct work_struct)             |
    |retry_timer_ms                       |  = VIRTIO_MEM_RETRY_TIMER_MIN_MS
    |    (unsigned int)                   |
    |retry_timer                          |
    |    (struct hrtimer)                 |
    |    +--------------------------------+
    |    |function                        |  = virtio_mem_timer_expired
    |    +--------------------------------+
    |memory_notifier                      |
    |    (struct notifier_block)          |
    |    +--------------------------------+
    |    |notifier_call                   |  = virtio_mem_memory_notifier_cb
    |    +--------------------------------+
    |                                     |
    |parent_resource                      |
    |    (struct resource*)               |
    |                                     |
    |                                     |
    |subblock_size                        |  = 4M(?)
    |    (uint64_t)                       |
    |nb_sb_per_mb                         |  = memory_block_size_bytes() / subblock_size
    |    (uint32_t)                       |
    |                                     |
    |last_usable_mb_id                    |
    |last_mb_id                        ---|---------------------------------+
    |next_mb_id                        ---|---v                             |
    |first_mb_id                       ---|---+                             |
    |    (unsigned long)                  |   |                             |
    |# fetch from config space            |   v                             v
    |device_block_size                    |
    |region_size                       ---|---------------------------------+
    |requested_size/plugged_size       ---|---------------+                 |
    |addr                              ---|---+           |                 |
    |    (uint64_t)                       |   |           |                 |
    |                                     |   v           v                 v
    |nid                                  |   +-----------------------------+
    |    (int)                            |   |                             |
    |                                     |   +-----------------------------+
    |                                     |
    |nb_mb_state[VIRTIO_MEM_MB_STATE_COUN]|  = number mb for each state
    |    (unsigned long)                  |
    |mb_state                             |  = [ 1Byte per memory block       ]
    |    (uint8_t* | virtio_mem_mb_state )|
    |                                     |
    |sb_bitmap                            |  one bit per subblock
    |    (unsigned long*)                 |  plugged/unplugged
    |                                     |
    +-------------------------------------+

0.1.1 mb_state
================================================================================


      STATE_UNUSED                              STATE_UNUSED
           |                                         ^
           | plug_and_add()                          |\
           |                                         | \  unplug_any_sb_online()
           |                                         |  \
           |\                                        |   + STATE_ONLINE_PARTIAL  --+
  full MB  | \  partial MB                  full MB  |  ^                          |
           |  v                                      | /  partial MB               |
           |   + STATE_OFFLINE_PARTIAL               |/                            |
           |  /                                      |                             | plug_any_sb() to full
           | /  plug_any_sb()                        |                             |
           |/                                        |  unplug_any_sb_online()     |
           v                                         |                             |
     STATE_OFFLINE        -------------->       STATE_ONLINE     <-----------------+

                     virtio_mem_notify_online()
                    
