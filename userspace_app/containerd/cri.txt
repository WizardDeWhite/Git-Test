1. init(), called by golang.plugin.Open()
================================================================================
// same entry as [plugins."io.containerd.grpc.v1.cri"] in /etc/containerd/config.toml
config = criconfig.DefaultConfig()
    CniConfig: CniConfig{
    	NetworkPluginBinDir:       "/opt/cni/bin",
    	NetworkPluginConfDir:      "/etc/cni/net.d",
    	NetworkPluginMaxConfNum:   1, // only one CNI plugin config file will be loaded
    	NetworkPluginConfTemplate: "",
    },
plugin.Register(&plugin.Registration{
	Type:   plugin.GRPCPlugin,
	ID:     "cri",
	Config: &config,               // here is the default config
	Requires: []plugin.Type{
		plugin.ServicePlugin,
	},
	InitFn: initCRIService,
})

2. initCRIService(), called by containerd.plugin.Init
================================================================================
criconfig.ValidatePluginConfig(ctx, pluginConfig)
c = criconfig.Config{}
servicesOpts := getServicesOpts(ic)      // setup service options
client, err := containerd.New()          // client to containerd
s := server.NewCRIService(c, client)
s.Run()

2.1 client, err := containerd.New()
================================================================================
c := &Client{
    defaultns: copts.defaultns,
}
c.runtime = defaults.DefaultRuntime   "io.containerd.runc.v2"
          or copts.defaultRuntime

2.2 s := server.NewCRIService(config, client)
================================================================================
    lables = label.NewStore()
    // criService implement grpcService which handles grpc request
    c := &criService{
    	config:             config,
    	client:             client,
    	os:                 osinterface.RealOS{},
    	sandboxStore:       sandboxstore.NewStore(labels),
    	containerStore:     containerstore.NewStore(labels),
    	imageStore:         imagestore.NewStore(client),
    	snapshotStore:      snapshotstore.NewStore(),
    	sandboxNameIndex:   registrar.NewRegistrar(),
    	containerNameIndex: registrar.NewRegistrar(),
    	initialized:        atomic.NewBool(false),
    }
    c.initPlatform()
        c.netPlugin, err = cni.New(cni.WithMinNetworkCount(networkAttachCount),
          cni.WithPluginConfDir(c.config.NetworkPluginConfDir),
          cni.WithPluginMaxConfNum(c.config.NetworkPluginMaxConfNum),
          cni.WithPluginDir([]string{c.config.NetworkPluginBinDir}))
            cni.WithPluginDir("/opt/cni/bin/")
    c.cniNetConfMonitor = newCNINetConfSyncer(c.config.NetworkPluginConfDir, c.netPlugin, c.cniLoadOptions())
        watcher := fsnotify.NewWatcher()
        os.MkdirAll(confDir, 0700)
        watcher.Add(confDir)
        netPlugin.Load(cni.WithLoNetwork, cni.WithDefaultConf)
            WithLoNetwork(), lo link config
            WithDefaultConf(), parse from /etc/cni/net.d/
    c.baseOCISpecs, err = loadBaseOCISpecs(&config)

2.3 s.Run() -> criService.Run()
================================================================================
    // start event handler
    eventMonitorErrCh := c.eventMonitor.start()
    // start snapshot stats syncer
    snapshotsSyncer.start()
    // start streaming server
    xxx
    // set server as initialized
    c.initialized.Set()

3. criService.Register(s *grpc.Server)
================================================================================
c.register(s)
    instrumented := newInstrumentedService(c)
        return &instrumentedService{c: c}   // c is set to type criService
    runtime.RegisterRuntimeServiceServer(s, instrumented)
        s.RegisterService(&_RuntimeService_serviceDesc, instrumented) // register RuntimeServiceServer grpc
    runtime.RegisterImageServiceServer(s, instrumented)
        s.RegisterService(&, instrumented) // register ImageServiceServer grpc

0. Data Struct
================================================================================

0.1 criService
================================================================================

    criService
    +----------------------------------------------+
    |config                                        |
    |    (criconfig.Config)                        |
    |                                              |
    |netPlugin                                     |  = defaultCNIConfig()
    |    (cni.CNI) interface {}                    |
    |                                              |
    |cniNetConfMonitor                             |
    |    (*cniNetConfSyncer)                       |
    |                                              |
    |client                                        |
    |    (*containerd.Client)                      |
    |                                              |
    +----------------------------------------------+

0.2 cri.Config, an element in criService
================================================================================

    Config
    +----------------------------------------------+
    |RootDir                                       |
    |    (string)                                  |
    |ContainerdEndpoint                            |
    |ContainerdRootDir                             |
    |    (string)                                  |
    |PluginConfig                                  |
    |    +-----------------------------------------+
    |    |ContainerdConfig                         |
    |    |                                         |
    |    |                                         |
    |    |CniConfig                                |
    |    |    +------------------------------------+
    |    |    |NetworkPluginBinDir                 |  = "/opt/cni/bin"
    |    |    |NetworkPluginConfDir                |  = "/etc/cni/net.d"
    |    |    |NetworkPluginConfTemplate           |  = ""
    |    |    |    (string)                        |
    |    |    |NetworkPluginMaxConfNum             |  = 1
    |    |    |    (int)                           |
    |    |    +------------------------------------+
    |    |                                         |
    |    |                                         |
    |    +-----------------------------------------+
    |                                              |
    |                                              |
    +----------------------------------------------+

0.3 libcni, assign to criService.netPlugin
================================================================================

    libcni
    +----------------------------------------------+
    |config                                        |
    |    +-----------------------------------------+
    |    |pluginDirs                               |  = "/opt/cni/bin"
    |    |    ([]string)                           |
    |    |pluginConfDir                            |  = "/etc/cni/net.d"
    |    |prefix                                   |  = "eth"
    |    |    (string)                             |
    |    |pluginMaxConfNum                         |  = 1
    |    |    (int)                                |
    |    +-----------------------------------------+
    |cniConfig                                     |  = cnilibrary.CNIConfig
    |    (cnilibrary.CNI)  interface{}             |  WithPluginDir("/opt/cni/bin")
    |    +-----------------------------------------+
    |    |Path                                     |  = pluginDirs
    |    |    ([]string)                           |  "/opt/cni/bin"
    |    |exec                                     |  assigned in addNetwork() -> ensureExec()
    |    |    (invoke.Exec)                        |
    |    |cacheDir                                 |
    |    +-----------------------------------------+
    |                                              |
    |networkCount                                  |  = 1
    |    (int)                                     |
    |networks                                      |  WithLoNetwork() / WithDefaultConf()
    |    ([]*Network)                              |
    |    +-----------------------------------------+
    |    |ifName                                   |  = "lo"
    |    |    (string)                             |
    |    |cni                                      |
    |    |    (cnilibrary.CNI)                     |
    |    |config                                   |
    |    |    (*cnilibrary.NetworkConfigList)      |
    |    |    +------------------------------------+
    |    |    |Name                                |
    |    |    |CNIVersion                          |
    |    |    |    (string)                        |
    |    |    |Plugins                             |
    |    |    |    ([]*NetworkConf)                |
    |    |    |    +-------------------------------+
    |    |    |    |Network                        |  parsed from /etc/cni/net.d/*.conf
    |    |    |    |   (*types.NetConf)            |
    |    |    |    |   +---------------------------+
    |    |    |    |   |CNIVersion                 |
    |    |    |    |   |Name                       |
    |    |    |    |   |Type                       |  used to search bin under /opt/cni/bin
    |    |    |    |   |IPAM                       |
    |    |    |    |   |                           |
    |    |    |    |   |                           |
    |    |    |    +---+---------------------------+
    |    |    |                                    |
    |    +----+------------------------------------+
    |    |ifName                                   |
    |    |    (string)                             |
    |    |cni                                      |
    |    |    (cnilibrary.CNI)                     |
    |    |config                                   |
    |    |    (*cnilibrary.NetworkConfigList)      |
    |    |                                         |
    +----+-----------------------------------------+

0. Reference 

https://www.huaweicloud.com/articles/a373db281bd7770464f4867939f63c4a.html
