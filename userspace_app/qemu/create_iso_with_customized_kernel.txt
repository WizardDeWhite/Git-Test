1. busybox

1.1 build 

```
git clone https://github.com/mirror/busybox.git
cd busybox
make defconfig
make menuconfig  -> select Settings -> Build static binary (no shared libs)
file busybox     -> check format
```

1.2 create file system 

```
make install
cd _install
mkdir dev proc sys
vi init          -> with following content
chmod +x init
find . -print0 | cpio --null -ov --format=newc | gzip -9 > ../initramfs.cpio.gz
```

init content
```
#!/bin/sh
mount -t devtmpfs none /dev
mount -t proc none /proc
mount -t sysfs none /sys
echo "Welcome to my Linux!"
exec /bin/sh
```

1.3 verify compiled kernel with qemu

qemu-system-x86_64 -kernel bzImage -initrd initramfs.cpio.gz -vnc :0


2. Create bootable iso

2.1 prepare files


```
mkdir -o iso/boot/grub
cd iso
cp bzImage boot/
cp initramfs.cpio.gz boot/
vi boot/grub/grub.cfg      -> with following content

cd ../
grub-mkrescue -o myos.iso iso/
```

grub.cfg
```
set default=0
set timeout=10

menuentry 'myos' --class os {
    insmod gzio
    insmod part_msdos
    linux /boot/bzImage tsc=nowatchdog
    initrd /boot/initramfs.cpio.gz
}
```


0. Reference

https://medium.com/@ThyCrow/compiling-the-linux-kernel-and-creating-a-bootable-iso-from-it-6afb8d23ba22
