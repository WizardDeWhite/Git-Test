1. Get source

$ go get -d -u github.com/kata-containers/runtime

2. Build

$ cd $GOPATH/src/github.com/kata-containers/runtime
$ make && sudo -E PATH=$PATH make install

Or

$ make runtime

Just build kata-runtime.

3. Quick Run

3.0 Install Kata

3.0.1 kata runtime

There is a page in repo to show you how to install the whole project. (Not
only kata-runtime)

https://github.com/kata-containers/documentation/tree/master/install

For example, on Fedora

```
$ source /etc/os-release
$ ARCH=$(arch)
$ BRANCH="${BRANCH:-master}"
$ sudo dnf -y install dnf-plugins-core
$ sudo -E dnf config-manager --add-repo "http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/Fedora_${VERSION_ID}/home:katacontainers:releases:${ARCH}:${BRANCH}.repo"
$ sudo -E dnf -y install kata-runtime kata-proxy kata-shim
```

BTW, you need to adjust the repo link based on you os version.

3.0.1 related bins

Besides kata-runtime itself, you also need to install other utilities.

https://github.com/kata-containers/runtime/releases

3.0.2 Final Check

$ kata-runtime kata-check

Would tell you whether the system is ready.

3.0.3 Related Configurations

Kata configuration file is /etc/kata-containers/configuration.toml.

Also we could use "kata-runtime kata-env" to show current status.

3.1 Prepare Bundle

$ bundle="/tmp/bundle"
$ rootfs="$bundle/rootfs"
$ mkdir -p "$rootfs" && (cd "$bundle" && kata-runtime spec)
$ sudo docker export $(sudo docker create busybox) | tar -C "$rootfs" -xvf -

3.2 Run

sudo kata-runtime --log=/dev/stdout run --bundle "$bundle" foo


4. Integrate Kata with Containerd

4.1 Install containerd + kata

https://github.com/kata-containers/documentation/blob/master/how-to/containerd-kata.md

Mostly, just need to install containerd.

And then two steps are necessary:

  * Adjust /etc/containerd/config.toml to support kata-runtime
  * use "-r kata" to start pod with kata-runtime

5. Create and install rootfs and initrd image

https://github.com/kata-containers/documentation/blob/master/Developer-Guide.md#create-and-install-rootfs-and-initrd-image

$ go get -d -u github.com/kata-containers/osbuilder
$ export ROOTFS_DIR=${GOPATH}/src/github.com/kata-containers/osbuilder/rootfs-builder/rootfs
$ sudo rm -rf ${ROOTFS_DIR}
$ cd $GOPATH/src/github.com/kata-containers/osbuilder/rootfs-builder
$ export distro=fedora
$ script -fec 'sudo -E GOPATH=$GOPATH USE_DOCKER=true SECCOMP=no ./rootfs.sh ${distro}'

6. Modify an image

Another way to have a private image is to do some adjustment based on a
current image. 

$ modprobe nbd max_part=8
$ qemu-nbd --connect=/dev/nbd0 /var/lib/vz/images/100/vm-100-disk-1.qcow2
$ fdisk /dev/nbd0 -l
$ mount /dev/nbd0p1 /mnt/somepoint/

Now you could modify the contend in /mount/somepoint/

After doing so, unmout and disconnect.

$ umount /mnt/somepoint/
$ qemu-nbd --disconnect /dev/nbd0
$ rmmod nbd

