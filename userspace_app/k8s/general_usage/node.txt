1. Label
1.1 Add/Del label to node

kubectl label node node-name label.name=value

kubectl label node node-name label.name-

1.2 Filter node based on label

$ kubectl get node -l label.name=value

Or

$ kubectl get node -l 'label.name in (val1, val2)'

2. Taint
2.1 Add/Del taint to node

kubectl taint nodes node1 key1=value1:NoSchedule

kubectl taint nodes node1 key1=value1:NoSchedule-

2.2 Select Node with Taint

kubectl get nodes -o json | jq '.items[] | select(.spec.taints[]?.key == "node.kubernetes.io/unschedulable") | .metadata.name'
# select both key and value
kubectl get nodes -o json | jq '.items[] | select(.spec.taints[]?.key == "node.kubernetes.io/unschedulable" and .spec.taints[]?.value == "test") | .metadata.name'

Or, If you have to use variable

export taint_key="node.kubernetes.io/unschedulable"
kubectl get nodes -o json | jq '.items[] | select(.spec.taints[]?.key == '\"${taint_key}\"') | .metadata.name'

2.2.1 Select Node with Taint and show its value

$ cat list_node.sh
#!/bin/bash
nodes=`kubectl get nodes -o json | jq -r '.items[] | select(.spec.taints[]?.key == '\"${1}\"') | .metadata.name'`

IFS=$'\n'
nodes=($nodes)

for (( i=0; i<${#nodes[@]}; i++ ))
do
	echo "node: " ${nodes[$i]}
	kubectl get node ${nodes[$i]} -o json | jq '.spec.taints[] | select(.key == '\"${1}\"') | .value'
done

$ ./list_node.sh node.kubernetes.io/unschedulable
