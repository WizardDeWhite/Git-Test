1. DNS service in K8s

https://kubernetes.io/zh/docs/tasks/administer-cluster/dns-debugging-resolution/

There are two choices in k8s to provide dns service:

* coreDNS
* kube-dns

1.1 List pods provide dns service

# kubectl get pods --namespace=kube-system -l k8s-app=kube-dns
NAME                      READY   STATUS    RESTARTS   AGE
coredns-ffcf57b7x-d7hll   1/1     Running   1          23d
coredns-ffcf57b7x-7lr4a   1/1     Running   0          163d

1.2 DNS service IP

# kubectl get service kube-dns -n kube-system
NAME       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE
kube-dns   ClusterIP   10.96.0.10   <none>        53/UDP,53/TCP,9153/TCP   163d

1.3 dnsmasq config the dns service IP

# cat /etc/dnsmasq.conf 
resolv-file=/etc/resolv.dnsmasq

# cat /etc/resolv.dnsmasq 
nameserver 10.96.0.10

This means the dns request will finally directed to DNS service IP.

1.4 Cluster Domain

https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/

From the following examples, a dns record contains domain name:
cluster-domain.example. This is configured in kubelet. (May also needed by
coreDNS).

There are two ways to configure the cluster-domain:

  * kubelet command line option
  * kubelet configuration file

For command line option: --cluster-domain=<default-local-domain>
For configuration file: clusterDomain: <default-local-domain> in /var/lib/kubelet/config.yaml

2. Pod DNS record

The Pod DNS record is provided by coreDNS. For detail, please refer to the
following section.

e.g. https://coredns.io/plugins/kubernetes/

2.1 Default Pattern

Pattern:

  pod-ip-address.my-namespace.pod.cluster-domain.example

For example, a pod in default namespace with ip 172.23.132.181, the dns record
is:

$ nslookup 172-23-132-181.default.pod.cluster.local

2.2 With hostname/subdomain Pattern

Pattern:

  hostname.subdomain.my-namespace.svc.cluster-domain.example

3. Service DNS record

Pattern:

  my-svc.my-namespace.svc.cluster-domain.example

For example, a service in matrix namespace wth name controller, the dns record
is:

$ nslookup controller.matrix.svc.cluster.local

4. Core DNS

coreDNS is defined by a Corefile, the format is explained by 

https://coredns.io/2017/07/23/corefile-explained/

We could customize the dns service by

https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/

The coreDNS corefile define the rule with plugins, and for kubernetes, the
plugin is 

https://coredns.io/plugins/kubernetes/


4.1 Debug CoreDNS

https://kubernetes.io/zh/docs/tasks/administer-cluster/dns-debugging-resolution/

Enable log:

  $ kubectl -n kube-system edit configmap coredns

Add log in corefile.

Get pods log:

  $ kubectl logs --namespace=kube-system -l k8s-app=kube-dns

Then you would see the dns request like this:

  "A IN vcont-yw-test.yw-subdomain.default.svc.cluster.local. udp 70 false 512" NXDOMAIN qr,aa,rd 163 0.000167611s
