1. x86_cpu_register_types
================================================================================

1.1 type_register_static(&x86_cpu_type_info);
================================================================================

1.2 x86_register_cpudef_types(&builtin_x86_defs)
================================================================================
1.2.1 x86_register_cpu_model_type(dev->name, m), unversioned model
================================================================================
1.2.2 vdef = x86_cpu_def_get_versions(def), get vdef
================================================================================
1.2.3 name = x86_cpu_versioned_model_name(def, vdef->version), get name
================================================================================
1.2.4 x86_register_cpu_model_type(name, m), register versioned model
================================================================================
1.2.5 x86_register_cpu_model_type(vdev->alias, m), register alias model
================================================================================
1.2.5.1 type_register_static();
================================================================================

1.3 type_register_static(&max_x86_cpu_type_info);
================================================================================
1.4 type_register_static(&x86_base_cpu_type_info);
================================================================================
1.5 type_register_static(&host_x86_cpu_type_info);
================================================================================

2. pc_init1/pc_q35_init
================================================================================

2.1 x86_cpus_init
================================================================================
2.1.1 x86_cpu_new()
================================================================================
2.1.1.1 object_new(MACHINE(x86ms)->cpu_type)
================================================================================

3. object_new(MACHINE(x86ms)->cpu_type)
================================================================================

3.1 cpu_common_initfn
================================================================================
3.1.1 cpu_exec_initfn()
================================================================================
3.1.2 x86_cpu_initfn
================================================================================
3.1.2.1 x86_cpu_register_feature_bit_props(), iterate feature_word_info set prop
================================================================================
3.1.2.2 x86_cpu_load_model(xcc->model)
================================================================================

3.2 x86_cpu_realizefn
================================================================================
3.2.1 x86_cpu_expand_features(), expand cpuid
================================================================================
3.2.1.1 plus_features, passed from qemu command line
================================================================================
3.2.1.2 minus_features, passed from qemu command line
================================================================================
3.2.2 x86_cpu_filter_features()
================================================================================
3.2.3 cpu_exec_realizefn()
================================================================================
3.2.3.1 cpu_list_add()
================================================================================
3.2.3.2 vmstate_register(), for migration
================================================================================
3.2.4 x86_cpu_apic_create()
================================================================================
3.2.5 mce_init()
================================================================================
3.2.5.1 cenv->mcg_cap = MCE_CAP_DEF | MCE_BANKS_DEF | (cpu->enable_lmce ? MCG_LMCE_P : 0);
================================================================================
3.2.6 qemu_init_vcpu
================================================================================
3.2.6.1 qemu_kvm_start_vcpu->qemu_kvm_cpu_thread_fn 
================================================================================
3.2.6.2 qemu_cond_wait(&qemu_cpu_cond, &qemu_global_mutex);
================================================================================
3.2.7 x86_cpu_apic_realize()
================================================================================
3.2.7.1 object_property_set_bool(OBJECT(cpu->apic_state), true, "realized",)
================================================================================
3.2.7.2 /* Map APIC MMIO area */
================================================================================
3.2.8 xcc->parent_realize = cpu_common_realizefn
================================================================================

4. qemu_kvm_cpu_thread_fn
================================================================================
4.1 kvm_init_vcpu(CPUState *cpu)
================================================================================
4.1.1 ret = kvm_arch_vcpu_id(cpu)
================================================================================
4.1.1.1 return cpu->apic_id;
================================================================================
4.1.2 ret = kvm_get_vcpu()
================================================================================
4.1.3 cpu->kvm_fd = ret;
================================================================================
4.1.4 cpu->kvm_state = kvm_state;
================================================================================
4.1.5 cpu->kvm_run = mmap(map_size, cpu->kvm_fd);
================================================================================
4.1.6 kvm_arch_init_vcpu(), setup CPUID stuff
================================================================================
4.1.6.1 kvm_arch_set_tsc_khz()
================================================================================
4.1.6.2 env->tsc_khz = kvm_vcpu_ioctl(cs, KVM_GET_TSC_KHZ)
================================================================================
4.1.6.3 hyperv_handle_properties(), Paravirtualization CPUID
================================================================================
4.1.6.4 cpu_x86_cpuid(CPUX86State, 0, 0), handle cpuid stuff
================================================================================
4.1.6.5 kvm_get_mce_cap_supported(kvm_state, &mcg_cap, &banks)
================================================================================
4.1.6.6 ret = kvm_vcpu_ioctl(cs, KVM_X86_SETUP_MCE, &env->mcg_cap)
================================================================================
4.1.6.7 qemu_add_vm_change_state_handler(cpu_update_state, env);
================================================================================
4.1.6.8 cpuid_find_entry(&cpuid_data.cpuid, 1, 0)
================================================================================
4.1.6.9 kvm_vcpu_ioctl(cs, KVM_SET_CPUID2, &cpuid_data), copy to kvm->vcpu
================================================================================
4.1.6.10 hyperv_init_vcpu()
================================================================================
4.2 kvm_init_cpu_signals(), refer to qemu_signal_init() for main thread signal
================================================================================
4.2.1 sigaction(SIG_IPI, kvm_ipi_signal), SIG_IPI will be handled by kvm_ipi_signal
================================================================================
4.2.2 sigdelset(&set, SIGBUS), handle SIGBUS with MCE_INJECTION
================================================================================
4.3 cpu_can_run()
================================================================================
4.4 kvm_cpu_exec()
================================================================================
4.4.1 kvm_vcpu_ioctl(KVM_RUN)
================================================================================
4.5 qemu_kvm_destroy_vcpu()
================================================================================

0. data type
================================================================================

0.1 TYPE_CPU
================================================================================

   TYPE_OBJECT
   +-------------------------------+ 
   |class_init                     | = object_class_init
   |                               |
   |instance_size                  | = sizeof(Object)
   +-------------------------------+ 

                                    TYPE_DEVICE
                                    +-------------------------------+ 
                                    |class_size                     | = sizeof(DeviceClass)
                                    |class_init                     | = device_class_init
                                    |                               |
                                    |instance_size                  | = sizeof(Object)
                                    |instance_init                  | = device_initfn
                                    |instance_finalize              | = device_finalize
                                    |                               |
                                    |realize                        | = x86_cpu_realizefn
                                    +-------------------------------+ 
                                 
                                 
                                    TYPE_CPU
                                    +-------------------------------+ 
                                    |class_size                     | = sizeof(CPUClass)
                                    |class_init                     | = cpu_class_init
                                    |                               |
                                    |instance_size                  | = sizeof(CPUState)
                                    |instance_init                  | = cpu_common_initfn
                                    |instance_finalize              | = cpu_common_finalize
                                    +-------------------------------+ 
                                 
                                 
                                 
                                    TYPE_X86_CPU
                                    +-------------------------------+ 
                                    |abstract                       | = true
                                    |class_size                     | = sizeof(X86CPUClass)
                                    |class_init                     | = x86_cpu_common_class_init
                                    |                               |
                                    |instance_size                  | = sizeof(X86CPU)
                                    |instance_init                  | = x86_cpu_initfn
                                    |                               |
                                    |parent_realize                 | = cpu_common_realizefn
                                    +-------------------------------+ 


   base-x86_64-cpu                                                    qemu64-x86_64-cpu                                                   host-x86_64-cpu
   +-------------------------------+                                  +-------------------------------+                                   +-------------------------------+ 
   |class_size                     |                                  |class_size                     |                                   |class_size                     |
   |class_init                     | = x86_cpu_base_class_init        |class_init                     | = x86_cpu_cpudef_class_init       |class_init                     | = host_x86_cpu_class_init
   |                               |                                  |                               |                                   |                               |
   |instance_size                  |                                  |instance_size                  |                                   |instance_size                  |
   |instance_init                  |                                  |instance_init                  |                                   |instance_init                  |
   +-------------------------------+                                  |class_data                     | = builtin_x86_defs[]              +-------------------------------+ 
                                                                      +-------------------------------+


0.2 X86CPU
================================================================================

   X86CPU
   +----------------------------------+ 
   |parent_obj                        |
   |    (CPUState)                    |
   |    +-----------------------------+
   |    |kvm_fd                       | = ioctl(KVM_CREATE_VCPU)
   |    |    (int)                    |
   |    |kvm_state                    | = kvm_state
   |    |    (struct KVMState *)      |
   |    |kvm_run                      | = mmap(mmap_size, kvm_fd)
   |    |    (struct kvm_run *)       |
   |    |                             |
   |    |                             |
   |    |                             |
   |    |                             |
   |    |                             |
   |    +-----------------------------+
   |                                  |
   |filtered_features                 | CPUID filtered
   |    (uint32_t [FEATURE_WORDS])    |
   |                                  |
   |                                  |
   +----------------------------------+ 
   |env                               |
   |    (CPUX86State)                 |
   |    +-----------------------------+
   |    |user_features                | CPUID user specified
   |    |features                     | CPUID this cpu supports
   |    |   (FeatureWordArray)        | copied from X86CPUDefinition->features
   |    |   (uint32_t [FEATURE_WORDS])|
   |    |                             |
   |    |                             |
   +----+-----------------------------+ 
   |node_id                           |
   |socket_id                         |
   |core_id                           |
   |thread_id                         |
   |    (int)                         |
   +----------------------------------+ 
   |hv_max_vps                        |
   |    (int)                         |
   |                                  |
   +----------------------------------+ 

0.3 X86CPUDefinition
================================================================================

   X86CPUDefinition
   +----------------------------------+ 
   |name/model_id                     |
   |    (char*)                       |
   +----------------------------------+ 
   |level/xlevel                      |
   |    (uint32_t)                    |
   +----------------------------------+ 
   |family/model/stepping             |
   |    (int)                         |
   +----------------------------------+ 
   |cache_info                        |
   |    (CPUCaches *)                 |
   +----------------------------------+ 
   |features                          |  CPUID this cpu supports
   |    (FeatureWordArray)            |
   |    (uint32_t [FEATURE_WORDS])    |
   +----------------------------------+ 
