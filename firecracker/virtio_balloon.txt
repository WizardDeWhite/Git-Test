1. Balloon::new()
================================================================================

   Balloon {
       device_info: VirtioDeviceInfo::new(
           BALLOON_DRIVER_NAME.to_string(),
           avail_features,
           Arc::new(vec![QUEUE_SIZE; NUM_QUEUES]),
           config.as_slice().to_vec(),
           epoll_mgr,
       ),
       config: Arc::new(Mutex::new(config)),
       paused: Arc::new(AtomicBool::new(false)),
       device_change_notifier: Box::new(VirtioNotifierNoop::new()),
       subscriber_id: Default::default(),
       phantom: PhantomData,
   }

1.1 impl VirtioDevice for Balloon
================================================================================

1.1.1 device_type()
================================================================================

1.1.2 queue_max_sizes()
================================================================================

1.1.3 read_config()
================================================================================

1.1.4 activate(config: VirtioDeviceConfig)
================================================================================
1.1.4.1 let inflate = config.queues.remove(0)
================================================================================
1.1.4.2 let deflate = config.queues.remove(0)
================================================================================
1.1.4.3 let reporting = config.queues.remove(0)
================================================================================
1.1.4.4 let handler = BalloonEpollHandler{conffig, inflate, deflate, reporting, balloon_config}
================================================================================
1.1.4.5 device_info.register_event_handler(handler), add subscriber to epoll_manager
================================================================================

0. data structure
================================================================================

0.0 device attach procedure
================================================================================
From api to device creation

  curl --unix-socket /tmp/dragonball.socket -i -X PUT \
      'http://localhost/balloon' -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '{
          "balloon_id": "balloon0",
          "size_mib": 0
      }'

                         ||
                         ||
			 \/

  ApiServer::handle_request()
      ParsedRequest::try_from_request()
          request::balloon::parse_put_balloon(body)
              cfg = serde_json::from_slice::<BalloonDeviceConfig>(body.raw())
          VmmAction::InsertBalloonDevice(BalloonDeviceConfig)
                                             |
                                             v
      ApiServer::serve_vmm_action_request(vmm_action)
          ApiServer.api_request_sender.send(vmm_action)

                         ||
                         ||
			 \/

  // Run the event loop to service API requests.
  Vmm::run_vmm_event_loop(vmm, vmm_service)
      EventManager::handle_events()
          EpollManager::handle_events()
      VmmService::run_vmm_action(Vmm, EventManager)
          let request = self.from_api.try_recv()
          match request {
              VmmAction::InsertBalloonDevice(balloon_cfg) => {
                  self.add_balloon_device(vmm, event_mgr, balloon_cfg)
                  
                      BalloonDeviceMgr::insert_device(device_manager, ctx, config.into())
              }
          }

                         ||
                         ||
			 \/

  BalloonDeviceMgr::insert_device(DeviceManager, DeviceOpContext, BalloonDeviceConfig)
      let mgr = &mut device_mgr.balloon_manager;
      mgr.configs.push(balloon_cfg);
      device = virtio::balloon::Balloon::new(epoll_mgr)
      mmio_dev = DeviceManager::create_mmio_virtio_device_with_device_change_notification(device, ctx)
      mgr.devices.insert(balloon_id, mmio_dev)

0.1. BalloonDeviceMgr
================================================================================

   BalloonDeviceMgr
   +------------------------------------+
   |configs                             |
   |    (Vec<BalloonDeviceConfigInfo>)  |
   |    +-------------------------------+
   |    |balloon_id                     |
   |    |    (String)                   |
   |    |size_mib                       |
   |    |    (u64)                      |
   |    +-------------------------------+
   |devices                             |
   |    (HashMap<String, DeviceIo>)     |
   |    +-------------------------------+
   |    |                               |
   |    |                               |
   |    |                               |
   +----+-------------------------------+

0.2. Balloon
================================================================================

VirtioDevice

   Balloon
   +------------------------------------+
   |config                              |
   |    (VirtioBalloonConfig)           |
   |    +-------------------------------+
   |    |num_pages                      |
   |    |actual                         |
   |    |    (u32)                      |
   |    +-------------------------------+
   |                                    |
   |device_info                         |
   |    (VirtioDeviceInfo)              |
   |    +-------------------------------+
   |    |driver_name                    |  = "virtio-balloon"
   |    |    (String)                   |  = VIRTIO_F_VERSION_1 | VIRTIO_BALLOON_F_REPORTING | VIRTIO_BALLOON_F_DEFLATE_ON_OOM
   |    |avail_features                 |
   |    |acked_features                 |
   |    |    (u64)                      |
   |    |queue_sizes                    |  = [128, 128, 128]
   |    |    (Vec<u16>)                 |
   |    |config_space                   |
   |    |    (Vec<u8>)                  |
   |    |epoll_manager                  |
   |    |    (EpollManager)             |
   |    +-------------------------------+
   |                                    |
   |device_change_notifier              |
   |    (VirtioNotifier)                |
   |                                    |
   |subscriber_id                       |  = device_info.register_event_handler(BalloonEpollHandler);
   |    (SubscriberId)                  |
   |                                    |
   |                                    |
   +------------------------------------+

0.2.1 VirtioDevice -> Balloon
================================================================================

   VirtioDevice (src/virtio/src/device.rs)
   +------------------------------------+
   |device_type()                       |
   |queue_max_sizes()                   |
   |ctrl_queue_max_sizes()              |
   |get_avail_features()                |
   |set_acked_features()                |
   |read_config()                       |
   |write_config()                      |
   |                                    |
   |activate()                          |
   |reset()                             |
   |                                    |
   |get_resource_requirements()         |
   |set_resource()                      |
   |                                    |
   |remove()                            |
   +------------------------------------+
                      |
                      |
                      |
                      v
   Balloon
   +------------------------------------+
   |new()                               |
   |set_size()                          |
   |                                    |
   |                                    |
   +------------------------------------+

0.3. BalloonEpollHandler
================================================================================

   BalloonEpollHandler
   +------------------------------------+
   |config                              |
   |    (VirtioDeviceConfig)            |
   |inflate                             |
   |deflate                             |
   |reporting                           |
   |    (VirtioQueueConfig)             |
   |balloon_config                      |
   |    (VirtioBalloonConfig)           |
   |                                    |
   |                                    |
   +------------------------------------+

0.3.1 MutEventSubscriber -> BalloonEpollHandler
================================================================================

   MutEventSubscriber
   +------------------------------------+
   |init()                              |
   |process()                           |
   |    INFLATE_QUEUE_AVAIL_EVENT       |
   |    DEFLATE_QUEUE_AVAIL_EVENT       |
   |    REPORTING_QUEUE_AVAIL_EVENT     |
   |                                    |
   +------------------------------------+
                      |
                      |
                      |
                      v
   BalloonEpollHandler
   +------------------------------------+
   |process_reporting_queue()           |
   |process_queue()                     |
   +------------------------------------+

0.4 VirtioQueueConfig
================================================================================

   VirtioQueueConfig
   +------------------------------------+
   |index                               |
   |    (u16)                           |
   |queue                               |
   |    (Queue)                         |
   |eventfd                             |
   |    (EventFd)                       |
   |notifier                            |
   |    (VirtioNotifier)                |
   |                                    |
   +------------------------------------+
