0. data structure
================================================================================

0.1 api_connection
================================================================================

    api_connection
    +---------------------------------------------------+
    |closed                                             |
    |_max_conversion_depth                              |
    |                                                   |
    |_local_apis                                        |
    |     (vector< generic_api >)                       |
    |_handle_to_id                                      |
    |     (map<uint64_t, api_id_type>)                  |   address to id
    |_local_callbacks                                   |
    |     (vector<function<variant(variants&, uint32)>>)|
    |                                                   |
    |api_visitor                                        |
    |    +----------------------------------------------+
    |    |_api_id                                       |   address of api_connection
    |    |     (uint32_t)                               |
    |    |_connection                                   |
    |    |     (api_connection)                         |
    |    |                                              |
    |    |from_varient()                                |
    |    |convert_callbacks()                           |
    |    |operator()                                    |   setup reflect function
    |    |                                              |
    +----+----------------------------------------------+
    |get_remote_api()                                   |   client side
    |                                                   |
    |send_call()                                        |
    |send_callback()                                    |
    |send_notice()                                      |
    |                                                   |
    |register_api()                                     |   server side
    |register_callback()                                |
    |                                                   |
    |receive_call()                                     |
    |receive_callback()                                 |
    |receive_notice()                                   |
    |                                                   |
    +---------------------------------------------------+


0.1.1 generic_api
================================================================================

    generic_api
    +---------------------------------------------------+
    |_api_connection                                    |
    |    (api_connection)                               |
    |_api                                               |
    |    (any)                                          |
    |_by_name                                           |
    |    (map< std::string, uint32_t>)                  |
    |_methods                                           |
    |    (vector<function<variant(variant&)>>)          |
    |api_visitor                                        |
    |    +----------------------------------------------+
    |    |_api                                          |
    |    |     (generic_api)                            |
    |    |_api_con                                      |
    |    |     (api_connection)                         |
    |    |                                              |
    |    |to_generic()                                  |
    |    |operator()                                    |
    |    |                                              |
    +---------------------------------------------------+
    |call(string, variant)                              |
    |call(method_id, variant)                           |
    |get_method_names()                                 |
    |                                                   |
    |                                                   |
    |                                                   |
    |                                                   |
    |                                                   |
    |                                                   |
    |                                                   |
    +---------------------------------------------------+

0.1.2 websocket_api_connection
================================================================================

    websocket_api_connection
    +---------------------------------------------------+
    |_connection                                        |
    |     (websocket_connection)                        |
    |_rpc_state                                         |
    |     (state)                                       |
    |     +---------------------------------------------+
    |     |_next_id                                     |
    |     |     (uint64_t)                              |
    |     |_awaiting                                    |
    |     |     (map<uint64_t, ptr>)                    |
    |     |_methods                                     |
    |     |     (map<string, method>)                   |
    |     |_unhandled                                   |
    |     |     (function<>)                            |
    |     +---------------------------------------------+
    |     |add/remove_method()                          |
    |     |local_call()                                 |
    |     |handle_reply()                               |
    |     |                                             |
    |     |start_remote_call()                          |
    |     |wait_for_response()                          |
    |     |on_unhandled()                               |
    +-----+---------------------------------------------+
    |send_call()                                        |
    |send_callback()                                    |
    |send_notice()                                      |
    |                                                   |
    +---------------------------------------------------+

0.2 api
================================================================================

    api_base
    +---------------------------------------------------+
    |get_handle()     = 0                               |
    |register_api()   = 0                               |
    |                                                   |
    |template<typename T>                               |
    |api<T, identity_member> as()                       |
    +---------------------------------------------------+

    * vtable<> is defined in FC_API

    template<typename Interface, typename Transform = identity_member >
    api : api_base
    +---------------------------------------------------+
    | typedef vtable<Interface,Transform> vtable_type;  |
    |                                                   |
    |_vtable                                            |  reflection table
    |     (vtable_type)                                 |
    |     +-----------------------------------------+   |
    |     |                                         |   |
    |     |    define a list of member functions    |   |
    |     |    linked in vtable_copy_visitor{}      |   |
    |     |                                         |   |
    |     |                                         |   |
    |     |                                         |   |
    |     +-----------------------------------------+   |
    |                                                   |
    |_data                                              |
    |     (fc::any)                                     |
    |     +-----------------------------------------+   |
    |     |     The real interface                  |   |
    |     |                                         |   |
    |     |                                         |   |
    |     +-----------------------------------------+   |
    |                                                   |
    +---------------------------------------------------+
    |get_handle()        return the address of _data    |
    |register_api(api_connection& conn)                 |
    |      register to conn->_local_apis                |
    +---------------------------------------------------+


    most simple usage in api.cpp

    fc::api<calculator> api_calc( std::make_shared<some_calculator>() )
    wdump( (api_calc->add(5,4)) );
    wdump( (api_calc->sub(5,4)) );

0.2.1 FC_API, define api::_vtable
================================================================================

class login_api
{
   public:
      fc::api<calculator> get_calc()const
      {
         FC_ASSERT( calc );
         return *calc;
      }
      fc::optional<fc::api<calculator>> calc;
      std::set<std::string> test( const std::string&, const std::string& ) { return std::set<std::string>(); }
};

FC_API( login_api, (get_calc)(test) );

namespace fc {
	template<typename Transform> struct vtable<calculator,Transform> : public std::enable_shared_from_this<vtable<calculator,Transform>>
	{
		decltype(Transform::functor( (calculator*)nullptr, &calculator::add)) add;
		decltype(Transform::functor( (calculator*)nullptr, &calculator::sub)) sub;
		decltype(Transform::functor( (calculator*)nullptr, &calculator::on_result)) on_result;
		decltype(Transform::functor( (calculator*)nullptr, &calculator::on_result2)) on_result2;

		template<typename Visitor> void visit_other( Visitor&& v )
		{
			typedef typename Visitor::other_type OtherType;
			v( "add", add, &OtherType::add );
			v( "sub", sub, &OtherType::sub );
			v( "on_result", on_result, &OtherType::on_result );
			v( "on_result2", on_result2, &OtherType::on_result2 );
		}
		template<typename Visitor> void visit( Visitor&& v )
		{
			v( "add", add );
			v( "sub", sub );
			v( "on_result", on_result );
			v( "on_result2", on_result2 );
		}
	};
}

0.2.1.1 vtable_copy_visitor
================================================================================

  template<typename OtherType>
  struct vtable_copy_visitor {
      typedef OtherType other_type;

      vtable_copy_visitor( OtherType& s):_source( s ){}

      template<typename R, typename MemberPtr, typename... Args>
      void operator()( const char* name, std::function<R(Args...)>& memb, MemberPtr m )const {
        OtherType* src = &_source;
        memb = [src,m]( Args... args ){ return (src->*m)(args...); };
      }
      OtherType& _source;
  };


0.3 how local api works
================================================================================

The effect of following line. (fc/tests/api.cpp)

    fc::api<calculator> api_calc( std::make_shared<some_calculator>() );

    api<calculator>                                  some_calculator
    +----------------------+                         +----------------------+
    |_vtable               |  _vtable::visit_other(  |                      |
    |   +------------------+  vtable_copy_visitor()) |                      |
    |   | add       -------|------------------------>|add()                 |
    |   | sub       -------|------------------------>|sub()                 |
    |   |                  |                         |                      |
    |   |                  |                         |                      |
    |   |                  |                         |                      |
    +---+------------------+                         +----------------------+

0.4 how remote api works
================================================================================

                            Client                                                     Server
       
       
                        api_connection                                             api_connection                            api<login_api>
                        +---------------------------+                              +---------------------------+             +-----------------+
   +--------------------|get_remote_api()           |                              |register_api()             |             |get_calc()   <---|---+
   | _vtable::visit(    |                           |                              |                           |             |                 |   |
   |  api_visitor() )   |                           |                              |_local_apis[<generic_api>]-|--- --+      +-----------------+   |
   |                    |                           |                              |                           |      |                      ^     |
   |                    |                           |                              |                           |      |  _vtable::visit(     |     |
   v                    |                           |                              |                           |      |   api_visitor() )    |     |
  api<login_api>        |                           |                              |                           |      |                      |     |
  +--------------+      +---------------------------+                              +---------------------------+      |      generic_api     |     |
  |_vtable       |                 ^                                                          ^                       +----->+---------------|-----+-+
  |  +-----------+                 |                                                          |                              |_api         --+     | |
  |  |get_calc()-|--+              |                                                          |                              |_api_connection      | |
  |  |           |  |              |                                                          |                              |                     | |
  |  |           |  |   websocket_api_connection       "id":1,"method":"call",     websocket_api_connection                  |                     | |
  +--+-----------+  |   +---------------------------+  "params":[0,"get_calc",[]]  +---------------------------+      +----->|_methods[]   --------+ |
                    +-->|send_call()             ---|----------------------------->|on_message()               |      |      |_by_name[]             |
                        |                           |                              |  |                        |      |      +-----------------------+
                        |    websocket_connection:: |                              |  +-rpc_state::local_call()|      |
                        |      send_message()       |                              |      |                    |      |
                        |                           |                              |      +--receive_call()  --|------+
                        +---------------------------+                              +---------------------------+


Client:
1. auto apic = std::make_shared<websocket_api_connection>(*con, MAX_DEPTH);
2. auto remote_login_api = apic->get_remote_api<login_api>();
3. auto remote_calc = remote_login_api->get_calc();

Server:
1. auto wsc = std::make_shared<websocket_api_connection>(*c, MAX_DEPTH);
2. auto login = std::make_shared<login_api>();
3. login->calc = calc_api;
4. wsc->register_api(fc::api<login_api>(login));

